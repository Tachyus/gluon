"use strict";var __assign=this&&this.__assign||Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++){t=arguments[n];for(var i in t)if(Object.prototype.hasOwnProperty.call(t,i))e[i]=t[i]}return e};Object.defineProperty(exports,"__esModule",{value:true});var Schema;(function(e){var t=function(){function e(){}return e}();e.Parameter=t;var n=function(){function e(){}return e}();e.Method=n;var r=function(){function e(){}return e}();e.EnumCase=r;var i=function(){function e(){}return e}();e.Enum=i;var a=function(){function e(){}return e}();e.Field=a;var o=function(){function e(){}return e}();e.Record=o;var u=function(){function e(){}return e}();e.UnionCase=u;var c=function(){function e(){}return e}();e.Union=c})(Schema=exports.Schema||(exports.Schema={}));var Option;(function(e){function t(e){return e}e.some=t;function n(e){return e!==undefined&&e!==null}e.isSome=n;function r(){return null}e.none=r;function i(e){return e===undefined||e===null}e.isNone=i;function a(e){return n(e)?e[0]:null}e.fromJSON=a;function o(e){return n(e)?[e]:null}e.toJSON=o;function u(e,t){return n(e)?e:t}e.withDefault=u})(Option=exports.Option||(exports.Option={}));var Dict=function(){function e(){this.data={}}e.prototype.check=function(e){if(typeof e!=="string"){throw new Error("Invalid or null key")}};e.prototype.containsKey=function(e){this.check(e);return this.data.hasOwnProperty(e)};e.prototype.forEach=function(e){for(var t in this.data){if(this.data.hasOwnProperty(t)){e(t,this.data[t])}}};e.prototype.copy=function(){var t=new e;this.forEach(function(e,n){return t.setAt(e,n)});return t};e.prototype.at=function(e){this.check(e);if(this.data.hasOwnProperty(e)){return this.data[e]}else{throw new Error("Missing key: "+e)}};e.prototype.tryFind=function(e){this.check(e);return this.data.hasOwnProperty(e)?this.data[e]:null};e.prototype.setAt=function(e,t){this.check(e);this.data[e]=t};e.prototype.toJSON=function(){return this.data};return e}();exports.Dict=Dict;var DataType;(function(e){function t(e){switch(e.tag){case"ArrayType":return[e.Item];case"ListType":return[e.Item];case"OptionType":return[e.Item];case"SequenceType":return[e.Item];case"StringDictType":return[e.Item];case"TupleType":return e.Item;default:return[]}}e.children=t})(DataType||(DataType={}));function defaultVisitor(){return{visitDataType:function(e){},visitRecord:function(e){},visitUnion:function(e){},visitEnum:function(e){}}}function visitDataType(e,t){t.visitDataType(e);DataType.children(e).forEach(function(e){return visitDataType(e,t)})}function visitTypes(e,t){function n(e){visitDataType(e.FieldType,t)}function r(e){t.visitRecord(e);e.RecordFields.forEach(n)}function i(e){e.CaseFields.forEach(n)}function a(e){t.visitUnion(e);e.UnionCases.forEach(i)}function o(e){t.visitEnum(e)}function u(e){switch(e.tag){case"DefineUnion":return a(e.Item);case"DefineRecord":return r(e.Item);case"DefineEnum":return o(e.Item);default:throw new Error("match failed")}}e.forEach(u)}function visitServiceMethods(e,t){function n(e){visitDataType(e.ParameterType,t)}function r(e){e.MethodParameters.forEach(n);if(e.MethodParameters.length>1){var r=tupleType(e.MethodParameters.map(function(e){return e.ParameterType}));visitDataType(r,t)}if(!!e.MethodReturnType){visitDataType(e.MethodReturnType,t)}}e.forEach(r)}function dataTypeKey(e){function t(e){switch(e.tag){case"ArrayType":return[":array",t(e.Item)];case"BooleanType":return":bool";case"BytesType":return":bytes";case"DateTimeType":return":datetime";case"DateTimeOffsetType":return":datetime";case"GuidType":return":str";case"DoubleType":return":double";case"IntType":return":int";case"JsonType":return":json";case"ListType":return[":list",t(e.Item)];case"OptionType":return[":option",t(e.Item)];case"SequenceType":return[":seq",t(e.Item)];case"StringDictType":return[":sdict",t(e.Item)];case"StringType":return":str";case"TupleType":return[":tup"].concat(e.Item.map(function(e){return t(e)}));case"TypeReference":return e.Item;default:throw new Error("match failed")}}return JSON.stringify(t(e))}function typeDefName(e){switch(e.tag){case"DefineEnum":return e.Item.EnumName;case"DefineRecord":return e.Item.RecordName;case"DefineUnion":return e.Item.UnionName;default:throw new Error("match failed")}}function findTypeDefinition(e,t){return e.TypeDefinitions.filter(function(e){return typeDefName(e)===t})[0]}var booleanSerializer={init:function(e){},toJSON:function(e){return e},fromJSON:function(e){return e}};function serializeNumber(e){if(isFinite(e)){return e}else{return String(e)}}function deserializeNumber(e){return Number(e)}var numberSerializer={init:function(e){},toJSON:serializeNumber,fromJSON:deserializeNumber};var DateFormat=new Intl.DateTimeFormat("en-GB",{weekday:"short",day:"2-digit",month:"short",year:"numeric",hour:"2-digit",minute:"2-digit",second:"2-digit",hour12:false});var dateSerializer={init:function(e){},toJSON:function(e){return e.unspecified?DateFormat.format(e):e.toISOString()},fromJSON:function(e){var t=e.charAt(e.length-1).toLowerCase()!="z";var n=new Date(e);n.unspecified=t;return n}};var dateTimeOffsetSerializer={init:function(e){},toJSON:function(e){var t=e.toISOString();return t},fromJSON:function(e){var t=new Date(e);return t}};var rawJsonSerializer={init:function(e){},toJSON:function(e){return e},fromJSON:function(e){return e}};function b64encode(e){var t="";for(var n=0;n<e.length;n++){t=t+String.fromCharCode(e[n])}return btoa(t)}function b64decode(e){var t=atob(e);var n=new Uint8Array(t.length);for(var r=0;r<n.length;r++){n[r]=t.charCodeAt(r)}return n}var bytesSerializer={init:function(e){},toJSON:function(e){return b64encode(e)},fromJSON:function(e){return b64decode(e)}};var stringSerializer={init:function(e){},toJSON:function(e){return e},fromJSON:function(e){return e}};var ArraySerializer=function(){function e(e){this.element=e}e.prototype.init=function(e){this.inner=e.getSerializer(this.element)};e.prototype.toJSON=function(e){var t=this;return e.map(function(e){return t.inner.toJSON(e)})};e.prototype.fromJSON=function(e){var t=this;return e.map(function(e){return t.inner.fromJSON(e)})};return e}();var DictSerializer=function(){function e(e){this.element=e}e.prototype.init=function(e){this.inner=e.getSerializer(this.element)};e.prototype.toJSON=function(e){var t=this;var n={};e.forEach(function(e,r){n[e]=t.inner.toJSON(r)});return n};e.prototype.fromJSON=function(e){var t=new Dict;for(var n in e){t.setAt(n,this.inner.fromJSON(e[n]))}return t};return e}();var OptionSerializer=function(){function e(e){this.element=e}e.prototype.init=function(e){this.inner=e.getSerializer(this.element)};e.prototype.toJSON=function(e){return e===null?null:[this.inner.toJSON(e)]};e.prototype.fromJSON=function(e){return e===null?null:this.inner.fromJSON(e[0])};return e}();var TupleSerializer=function(){function e(e){this.elements=e}e.prototype.length=function(){return this.elements.length};e.prototype.init=function(e){this.inner=this.elements.map(function(t){return e.getSerializer(t)})};e.prototype.toJSON=function(e){var t=this.length();var n=new Array(t);for(var r=0;r<t;r++){n[r]=this.inner[r].toJSON(e[r])}return n};e.prototype.fromJSON=function(e){var t=this.length();var n=new Array(t);for(var r=0;r<t;r++){n[r]=this.inner[r].fromJSON(e[r])}return n};return e}();function buildDataTypeSerializer(e){switch(e.tag){case"ArrayType":return new ArraySerializer(e.Item);case"ListType":return new ArraySerializer(e.Item);case"SequenceType":return new ArraySerializer(e.Item);case"BooleanType":return booleanSerializer;case"BytesType":return bytesSerializer;case"DateTimeType":return dateSerializer;case"DateTimeOffsetType":return dateTimeOffsetSerializer;case"DoubleType":return numberSerializer;case"IntType":return numberSerializer;case"JsonType":return rawJsonSerializer;case"OptionType":return new OptionSerializer(e.Item);case"StringDictType":return new DictSerializer(e.Item);case"StringType":return stringSerializer;case"GuidType":return stringSerializer;case"TupleType":return new TupleSerializer(e.Item);default:throw new Error("Invalid DataType")}}var TypeRegistry=function(){function e(){this.activators=new Dict}e.prototype.registerActivators=function(e){var t=this;e.forEach(function(e){t.activators.setAt(e.typeId,e)})};e.prototype.fullCaseName=function(e,t){var n=e.lastIndexOf(".");if(n===-1){return t}else{return e.substr(0,n)+"."+t}};e.prototype.createRecord=function(e,t){return this.activators.at(e).createInstance(t)};e.prototype.createUnion=function(e,t,n){return this.activators.at(this.fullCaseName(e,t)).createInstance(n)};return e}();var EnumSerializer=function(){function e(){}e.prototype.init=function(e){};e.prototype.toJSON=function(e){return e};e.prototype.fromJSON=function(e){return e};return e}();var RecordSerializer=function(){function e(e,t){this.record=e;this.typeRegistry=t}e.prototype.init=function(e){this.fields=this.record.RecordFields.map(function(t){return{name:t.FieldName,ser:e.getSerializer(t.FieldType)}})};e.prototype.toJSON=function(e){var t={};this.fields.forEach(function(n){t[n.name]=n.ser.toJSON(e[n.name])});return t};e.prototype.fromJSON=function(e){var t=this.fields.length;var n=new Array(t);for(var r=0;r<t;r++){var i=this.fields[r];n[r]=i.ser.fromJSON(e[i.name])}return this.typeRegistry.createRecord(this.record.RecordName,n)};return e}();var FieldInfo=function(){function e(){}return e}();var CaseInfo=function(){function e(){}return e}();var UnionSerializer=function(){function e(e,t){this.union=e;this.typeRegistry=t}e.prototype.init=function(e){this.cases=this.union.UnionCases.map(function(t){return{caseName:t.CaseName,fields:t.CaseFields.map(function(t){return{fieldName:t.FieldName,fieldSerializer:e.getSerializer(t.FieldType)}})}})};e.prototype.findCase=function(e){for(var t=0;t<this.cases.length;t++){var n=this.cases[t];if(n.caseName===e){return n}}};e.prototype.toJSON=function(e){var t=typeof e==="string";var n=t?e:e.tag;var r=this.findCase(n);if(r!==undefined){if(t){return[n]}else{var i=new Array(r.fields.length+1);i[0]=n;for(var a=0;a<r.fields.length;a++){var o=r.fields[a];var u=e[o.fieldName];i[a+1]=o.fieldSerializer.toJSON(u)}return i}}return null};e.prototype.fromJSON=function(e){var t=this.findCase(e[0]);if(t!==undefined){var n=new Array(e.length-1);for(var r=0;r<n.length;r++){var i=t.fields[r];n[r]=i.fieldSerializer.fromJSON(e[r+1])}return this.typeRegistry.createUnion(this.union.UnionName,t.caseName,n)}else{return null}};return e}();function typeReference(e){return{tag:"TypeReference",Item:e}}function tupleType(e){return{tag:"TupleType",Item:e}}var SerializerService=function(){function e(){this.dict=new Dict;this.registry=new TypeRegistry}e.prototype.add=function(e,t){var n=dataTypeKey(e);this.dict.setAt(n,t)};e.prototype.getSerializer=function(e){var t=dataTypeKey(e);return this.dict.at(t)};e.prototype.contains=function(e){var t=dataTypeKey(e);return this.dict.containsKey(t)};e.prototype.init=function(){var e=this;this.dict.forEach(function(t,n){n.init(e)})};e.prototype.registerActivators=function(e){this.registry.registerActivators(e)};e.prototype.createVisitor=function(){var e=this;var t=defaultVisitor();var n=function(t){if(!e.contains(t)){e.add(t,buildDataTypeSerializer(t))}};t.visitDataType=function(e){if(e.tag!=="TypeReference"){n(e)}};t.visitRecord=function(t){var n=typeReference(t.RecordName);e.add(n,new RecordSerializer(t,e.registry))};t.visitUnion=function(t){var n=typeReference(t.UnionName);e.add(n,new UnionSerializer(t,e.registry))};t.visitEnum=function(t){var n=typeReference(t.EnumName);e.add(n,new EnumSerializer)};return t};e.prototype.registerTypes=function(e){visitTypes(e,this.createVisitor());this.init()};e.prototype.registerServiceMethods=function(e){visitServiceMethods(e,this.createVisitor());this.init()};return e}();var Client=function(){function e(e,t){if(e===void 0){e=new FetchClient}if(t===void 0){t="/gluon-api"}this.httpClient=e;this.prefix=t}return e}();exports.Client=Client;var FetchClient=function(){function e(e){if(e===void 0){e={}}this.headers=e}e.serialize=function(e,t){var n=[];for(var r in e){if(e.hasOwnProperty(r)){var i=t?t+"["+r+"]":r,a=e[r];n.push(a!==null&&typeof a==="object"?this.serialize(a,i):encodeURIComponent(i)+"="+encodeURIComponent(a))}}return n.join("&")};e.prototype.httpGet=function(t,n,r){var i=Option.isSome(n)?e.serialize(n):null;var a=Option.isNone(i)||i===""?t:t+"?"+i;return window.fetch(a,{method:"GET",headers:new Headers(__assign({},this.headers,{Accept:"application/json"}))}).then(function(e){return e.json()}).then(r)};e.prototype.httpCall=function(e,t,n,r){var i=Option.isSome(n)?{method:e,body:n,headers:new Headers(__assign({},this.headers,{Accept:"application/json","Content-Type":"application/json"}))}:{method:e};var a=window.fetch(t,i);if(Option.isSome(r)){return a.then(function(e){return e.json()}).then(r)}else{return a}};return e}();exports.FetchClient=FetchClient;var Remoting;(function(e){function t(e){switch(e){case"Get":return"get";case"Delete":return"delete";case"Post":return"post";case"Put":return"put";default:throw new Error("match failed")}}function n(e){switch(e.tag){case"HttpCallingConvention":return e.Item1;default:throw new Error("match failed")}}function r(e){switch(e.tag){case"HttpCallingConvention":return e.path;default:throw new Error("match failed")}}function i(e,t){return e.prefix+"/"+r(t.CallingConvention)}function a(e,t,n){var r={};t.innerMethod.MethodParameters.forEach(function(e,i){r[e.ParameterName]=JSON.stringify(t.parameterSerializers[i].toJSON(n[i]))});return r}function o(e,t,n){var r;if(t.arity==0){return null}else if(t.arity==1){r=n[0]}else{r=n}return JSON.stringify(t.jointParametersSerializer.toJSON(r))}function u(e,r,u){function c(e){if(r.doesReturn){var t=r.returnTypeSerializer.fromJSON(e);return t}else{return e}}var s=i(e,r.innerMethod);var p=n(r.innerMethod.CallingConvention);switch(p){case"Get":var l=a(e,r,u);return e.httpClient.httpGet(s,l,c);default:var f=o(e,r,u);return e.httpClient.httpCall(t(p),s,f,c)}}e.remoteCall=u})(Remoting||(Remoting={}));var RemoteMethodProxy=function(){function e(e,t){this.innerMethod=t;this.arity=t.MethodParameters.length;switch(this.arity){case 0:break;case 1:var n=e.getSerializer(t.MethodParameters[0].ParameterType);this.jointParametersSerializer=n;this.parameterSerializers=[n];break;default:this.parameterSerializers=t.MethodParameters.map(function(t){return e.getSerializer(t.ParameterType)});this.jointParametersSerializer=e.getSerializer(tupleType(t.MethodParameters.map(function(e){return e.ParameterType})));break}if(!!t.MethodReturnType){this.doesReturn=true;this.returnTypeSerializer=e.getSerializer(t.MethodReturnType)}else{this.doesReturn=false}}e.prototype.call=function(e,t){return Remoting.remoteCall(e,this,t)};return e}();var MethodBuilder=function(){function e(e){this.factory=e;this.table=new Dict}e.prototype.registerService=function(e){var t=this;e.Methods.forEach(function(e){var n=new RemoteMethodProxy(t.factory,e);t.table.setAt(e.MethodName,n)})};e.prototype.getProxy=function(e){return this.table.at(e)};e.prototype.remoteMethod=function(e){var t=this;return function(n){var r=t.getProxy(e);function i(){var e=arguments;return r.call(n,e)}return i}};return e}();var RawSchemaJsonParser;(function(e){function t(e,t){return e[t+1]}function n(e){var t=e;return t.slice(1)}function r(e){return e[0]}function i(e){switch(r(e)){case"ArrayType":return{tag:"ArrayType",Item:i(t(e,0))};case"BooleanType":return{tag:"BooleanType"};case"BytesType":return{tag:"BytesType"};case"DateTimeType":return{tag:"DateTimeType"};case"DateTimeOffsetType":return{tag:"DateTimeOffsetType"};case"DoubleType":return{tag:"DoubleType"};case"IntType":return{tag:"IntType"};case"JsonType":return{tag:"JsonType"};case"ListType":return{tag:"ListType",Item:i(t(e,0))};case"OptionType":return{tag:"OptionType",Item:i(t(e,0))};case"SequenceType":return{tag:"SequenceType",Item:i(t(e,0))};case"StringDictType":return{tag:"StringDictType",Item:i(t(e,0))};case"StringType":return{tag:"StringType"};case"GuidType":return{tag:"GuidType"};case"TupleType":return{tag:"TupleType",Item:t(e,0).map(i)};case"TypeReference":return{tag:"TypeReference",Item:t(e,0)};default:throw new Error("failed to parse a data type")}}function a(e){return{FieldName:e.FieldName,FieldType:i(e.FieldType)}}function o(e){return{RecordName:e.RecordName,RecordFields:e.RecordFields.map(a)}}function u(e){return{CaseName:e.CaseName,CaseFields:e.CaseFields.map(a)}}function c(e){return{UnionName:e.UnionName,UnionCases:e.UnionCases.map(u)}}function s(e){return{EnumCaseName:e.EnumCaseName,EnumCaseValue:e.EnumCaseValue}}function p(e){return{EnumName:e.EnumName,EnumCases:e.EnumCases.map(s)}}function l(e){switch(r(e)){case"DefineRecord":return{tag:"DefineRecord",Item:o(t(e,0))};case"DefineUnion":return{tag:"DefineUnion",Item:c(t(e,0))};case"DefineEnum":return{tag:"DefineEnum",Item:p(t(e,0))};default:throw new Error("error parsing type definition")}}e.parseTypeDefinition=l;function f(e){return{ParameterName:e.ParameterName,ParameterType:i(e.ParameterType)}}function m(e){var t=r(e);switch(t){case"Delete":return t;case"Get":return t;case"Post":return t;case"Put":return t;default:throw new Error("error parsing http method")}}function y(e){switch(r(e)){case"HttpCallingConvention":return{tag:"HttpCallingConvention",Item1:m(t(e,0)),path:t(e,1)};default:throw new Error("error parsing calling convention")}}function d(e,t){return e===null?null:t(e[0])}function h(e){var t=y(e.CallingConvention);var n=e.MethodName;var r=e.MethodParameters.map(f);var a=d(e.MethodReturnType,i);return{CallingConvention:t,MethodName:n,MethodParameters:r,MethodReturnType:a}}function T(e){return{Methods:e.Methods.map(h),TypeDefinitions:e.TypeDefinitions.map(l)}}e.parseServiceSchema=T})(RawSchemaJsonParser||(RawSchemaJsonParser={}));var Internals;(function(e){var t=new SerializerService;var n=new MethodBuilder(t);function r(e,n){return t.getSerializer({tag:"TypeReference",Item:e}).toJSON(n)}e.toJSON=r;function i(e,n){return t.getSerializer({tag:"TypeReference",Item:e}).fromJSON(n)}e.fromJSON=i;function a(e){var n=[];function r(e,t){n.push({typeId:e,createInstance:function(e){return t.apply(null,e)}})}for(var i in e){r(i,e[i])}t.registerActivators(n)}e.registerActivators=a;function o(e){var n=e.map(RawSchemaJsonParser.parseTypeDefinition);t.registerTypes(n)}e.registerTypeDefinitions=o;function u(e){var r=RawSchemaJsonParser.parseServiceSchema(e);t.registerTypes(r.TypeDefinitions);t.registerServiceMethods(r.Methods);n.registerService(r)}e.registerService=u;function c(e){return n.remoteMethod(e)}e.remoteMethod=c})(Internals=exports.Internals||(exports.Internals={}));Internals.registerActivators({"Gluon.Schema.Delete":function(){return"Delete"},"Gluon.Schema.Get":function(){return"Get"},"Gluon.Schema.Post":function(){return"Post"},"Gluon.Schema.Put":function(){return"Put"},"Gluon.Schema.HttpCallingConvention":function(e,t){return{tag:"HttpCallingConvention",Item1:e,path:t}},"Gluon.Schema.ArrayType":function(e){return{tag:"ArrayType",Item:e}},"Gluon.Schema.BooleanType":function(){return{tag:"BooleanType"}},"Gluon.Schema.BytesType":function(){return{tag:"BytesType"}},"Gluon.Schema.DateTimeType":function(){return{tag:"DateTimeType"}},"Gluon.Schema.DateTimeOffsetType":function(){return{tag:"DateTimeOffsetType"}},"Gluon.Schema.DoubleType":function(){return{tag:"DoubleType"}},"Gluon.Schema.IntType":function(){return{tag:"IntType"}},"Gluon.Schema.JsonType":function(){return{tag:"JsonType"}},"Gluon.Schema.ListType":function(e){return{tag:"ListType",Item:e}},"Gluon.Schema.OptionType":function(e){return{tag:"OptionType",Item:e}},"Gluon.Schema.SequenceType":function(e){return{tag:"SequenceType",Item:e}},"Gluon.Schema.StringDictType":function(e){return{tag:"StringDictType",Item:e}},"Gluon.Schema.StringType":function(){return{tag:"StringType"}},"Gluon.Schema.GuidType":function(){return{tag:"GuidType"}},"Gluon.Schema.TupleType":function(e){return{tag:"TupleType",Item:e}},"Gluon.Schema.TypeReference":function(e){return{tag:"TypeReference",Item:e}},"Gluon.Schema.Parameter":function(e,t){return{ParameterName:e,ParameterType:t}},"Gluon.Schema.Method":function(e,t,n,r){return{CallingConvention:e,MethodName:t,MethodParameters:n,MethodReturnType:r}},"Gluon.Schema.EnumCase":function(e,t){return{EnumCaseName:e,EnumCaseValue:t}},"Gluon.Schema.Enum":function(e,t){return{EnumName:e,EnumCases:t}},"Gluon.Schema.Field":function(e,t){return{FieldName:e,FieldType:t}},"Gluon.Schema.Record":function(e,t){return{RecordName:e,RecordFields:t}},"Gluon.Schema.UnionCase":function(e,t){return{CaseName:e,CaseFields:t}},"Gluon.Schema.Union":function(e,t){return{UnionName:e,UnionCases:t}},"Gluon.Schema.DefineEnum":function(e){return{tag:"DefineEnum",Item:e}},"Gluon.Schema.DefineRecord":function(e){return{tag:"DefineRecord",Item:e}},"Gluon.Schema.DefineUnion":function(e){return{tag:"DefineUnion",Item:e}},"Gluon.Schema.Service":function(e,t){return{Methods:e,TypeDefinitions:t}}});Internals.registerTypeDefinitions([["DefineUnion",{UnionName:"Gluon.Schema.HttpMethod",UnionCases:[{CaseName:"Delete",CaseFields:[]},{CaseName:"Get",CaseFields:[]},{CaseName:"Post",CaseFields:[]},{CaseName:"Put",CaseFields:[]}]}],["DefineUnion",{UnionName:"Gluon.Schema.CallingConvention",UnionCases:[{CaseName:"HttpCallingConvention",CaseFields:[{FieldName:"Item1",FieldType:["TypeReference","Gluon.Schema.HttpMethod"]},{FieldName:"path",FieldType:["StringType"]}]}]}],["DefineUnion",{UnionName:"Gluon.Schema.DataType",UnionCases:[{CaseName:"ArrayType",CaseFields:[{FieldName:"Item",FieldType:["TypeReference","Gluon.Schema.DataType"]}]},{CaseName:"BooleanType",CaseFields:[]},{CaseName:"BytesType",CaseFields:[]},{CaseName:"DateTimeType",CaseFields:[]},{CaseName:"DoubleType",CaseFields:[]},{CaseName:"IntType",CaseFields:[]},{CaseName:"JsonType",CaseFields:[]},{CaseName:"ListType",CaseFields:[{FieldName:"Item",FieldType:["TypeReference","Gluon.Schema.DataType"]}]},{CaseName:"OptionType",CaseFields:[{FieldName:"Item",FieldType:["TypeReference","Gluon.Schema.DataType"]}]},{CaseName:"SequenceType",CaseFields:[{FieldName:"Item",FieldType:["TypeReference","Gluon.Schema.DataType"]}]},{CaseName:"StringDictType",CaseFields:[{FieldName:"Item",FieldType:["TypeReference","Gluon.Schema.DataType"]}]},{CaseName:"StringType",CaseFields:[]},{CaseName:"TupleType",CaseFields:[{FieldName:"Item",FieldType:["ListType",["TypeReference","Gluon.Schema.DataType"]]}]},{CaseName:"TypeReference",CaseFields:[{FieldName:"Item",FieldType:["StringType"]}]}]}],["DefineRecord",{RecordName:"Gluon.Schema.Parameter",RecordFields:[{FieldName:"ParameterName",FieldType:["StringType"]},{FieldName:"ParameterType",FieldType:["TypeReference","Gluon.Schema.DataType"]}]}],["DefineRecord",{RecordName:"Gluon.Schema.Method",RecordFields:[{FieldName:"CallingConvention",FieldType:["TypeReference","Gluon.Schema.CallingConvention"]},{FieldName:"MethodName",FieldType:["StringType"]},{FieldName:"MethodParameters",FieldType:["ListType",["TypeReference","Gluon.Schema.Parameter"]]},{FieldName:"MethodReturnType",FieldType:["OptionType",["TypeReference","Gluon.Schema.DataType"]]}]}],["DefineRecord",{RecordName:"Gluon.Schema.EnumCase",RecordFields:[{FieldName:"EnumCaseName",FieldType:["StringType"]},{FieldName:"EnumCaseValue",FieldType:["IntType"]}]}],["DefineRecord",{RecordName:"Gluon.Schema.Enum",RecordFields:[{FieldName:"EnumName",FieldType:["StringType"]},{FieldName:"EnumCases",FieldType:["ListType",["TypeReference","Gluon.Schema.EnumCase"]]}]}],["DefineRecord",{RecordName:"Gluon.Schema.Field",RecordFields:[{FieldName:"FieldName",FieldType:["StringType"]},{FieldName:"FieldType",FieldType:["TypeReference","Gluon.Schema.DataType"]}]}],["DefineRecord",{RecordName:"Gluon.Schema.Record",RecordFields:[{FieldName:"RecordName",FieldType:["StringType"]},{FieldName:"RecordFields",FieldType:["ListType",["TypeReference","Gluon.Schema.Field"]]}]}],["DefineRecord",{RecordName:"Gluon.Schema.UnionCase",RecordFields:[{FieldName:"CaseName",FieldType:["StringType"]},{FieldName:"CaseFields",FieldType:["ListType",["TypeReference","Gluon.Schema.Field"]]}]}],["DefineRecord",{RecordName:"Gluon.Schema.Union",RecordFields:[{FieldName:"UnionName",FieldType:["StringType"]},{FieldName:"UnionCases",FieldType:["ListType",["TypeReference","Gluon.Schema.UnionCase"]]}]}],["DefineUnion",{UnionName:"Gluon.Schema.TypeDefinition",UnionCases:[{CaseName:"DefineEnum",CaseFields:[{FieldName:"Item",FieldType:["TypeReference","Gluon.Schema.Enum"]}]},{CaseName:"DefineRecord",CaseFields:[{FieldName:"Item",FieldType:["TypeReference","Gluon.Schema.Record"]}]},{CaseName:"DefineUnion",CaseFields:[{FieldName:"Item",FieldType:["TypeReference","Gluon.Schema.Union"]}]}]}],["DefineRecord",{RecordName:"Gluon.Schema.Service",RecordFields:[{FieldName:"Methods",FieldType:["ListType",["TypeReference","Gluon.Schema.Method"]]},{FieldName:"TypeDefinitions",FieldType:["ListType",["TypeReference","Gluon.Schema.TypeDefinition"]]}]}]]);
//# sourceMappingURL=dist/Gluon.min.js.map