var Gluon;(function(a){var b;(function(i){var g=(function(){function l(){}return l}());i.Parameter=g;var f=(function(){function l(){}return l}());i.Method=f;var d=(function(){function l(){}return l}());i.EnumCase=d;var c=(function(){function l(){}return l}());i.Enum=c;var e=(function(){function l(){}return l}());i.Field=e;var h=(function(){function l(){}return l}());i.Record=h;var k=(function(){function l(){}return l}());i.UnionCase=k;var j=(function(){function l(){}return l}());i.Union=j})(b=a.Schema||(a.Schema={}))})(Gluon||(Gluon={}));(function(s){var x;(function(U){function V(Y){return Y}U.some=V;function S(Y){return Y!==undefined&&Y!==null}U.isSome=S;function T(){return null}U.none=T;function R(Y){return Y===undefined||Y===null}U.isNone=R;function Q(Y){return S(Y)?(Y[0]):null}U.fromJSON=Q;function W(Y){return S(Y)?[Y]:null}U.toJSON=W;function X(Z,Y){return S(Z)?Z:Y}U.withDefault=X})(x=s.Option||(s.Option={}));var n=(function(){function Q(){this.data={}}Q.prototype.check=function(R){if(typeof R!=="string"){throw new Error("Invalid or null key")}};Q.prototype.containsKey=function(R){this.check(R);return this.data.hasOwnProperty(R)};Q.prototype.forEach=function(S){for(var R in this.data){if(this.data.hasOwnProperty(R)){S(R,this.data[R])}}};Q.prototype.copy=function(){var R=new Q();this.forEach(function(T,S){return R.setAt(T,S)});return R};Q.prototype.at=function(R){this.check(R);if(this.data.hasOwnProperty(R)){return this.data[R]}else{throw new Error("Missing key: "+R)}};Q.prototype.tryFind=function(R){this.check(R);return this.data.hasOwnProperty(R)?this.data[R]:null};Q.prototype.setAt=function(R,S){this.check(R);this.data[R]=S};Q.prototype.toJSON=function(){return this.data};return Q}());s.Dict=n;var i;(function(R){function Q(S){switch(S.tag){case"ArrayType":return[S.Item];case"ListType":return[S.Item];case"OptionType":return[S.Item];case"SequenceType":return[S.Item];case"StringDictType":return[S.Item];case"TupleType":return S.Item;default:return[]}}R.children=Q})(i||(i={}));function l(){return{visitDataType:function(Q){},visitRecord:function(Q){},visitUnion:function(Q){},visitEnum:function(Q){}}}function N(Q,R){R.visitDataType(Q);i.children(Q).forEach(function(S){return N(S,R)})}function P(Q,U){function T(Y){N(Y.FieldType,U)}function V(Y){U.visitRecord(Y);Y.RecordFields.forEach(T)}function R(Y){Y.CaseFields.forEach(T)}function X(Y){U.visitUnion(Y);Y.UnionCases.forEach(R)}function S(Y){U.visitEnum(Y)}function W(Y){switch(Y.tag){case"DefineUnion":return X(Y.Item);case"DefineRecord":return V(Y.Item);case"DefineEnum":return S(Y.Item);default:throw new Error("match failed")}}Q.forEach(W)}function O(Q,S){function T(U){N(U.ParameterType,S)}function R(U){U.MethodParameters.forEach(T);if(U.MethodParameters.length>1){var V=I(U.MethodParameters.map(function(W){return W.ParameterType}));N(V,S)}if(!!U.MethodReturnType){N(U.MethodReturnType,S)}}Q.forEach(R)}function j(Q){function R(S){switch(S.tag){case"ArrayType":return[":array",R(S.Item)];case"BooleanType":return":bool";case"BytesType":return":bytes";case"DateTimeType":return":datetime";case"DoubleType":return":double";case"IntType":return":int";case"JsonType":return":json";case"ListType":return[":list",R(S.Item)];case"OptionType":return[":option",R(S.Item)];case"SequenceType":return[":seq",R(S.Item)];case"StringDictType":return[":sdict",R(S.Item)];case"StringType":return":str";case"TupleType":return[":tup"].concat(S.Item.map(function(T){return R(T)}));case"TypeReference":return S.Item;default:throw new Error("match failed")}}return JSON.stringify(R(Q))}function J(Q){switch(Q.tag){case"DefineEnum":return Q.Item.EnumName;case"DefineRecord":return Q.Item.RecordName;case"DefineUnion":return Q.Item.UnionName;default:throw new Error("match failed")}}function r(R,Q){return R.TypeDefinitions.filter(function(S){return J(S)===Q})[0]}var d={init:function(Q){},toJSON:function(Q){return Q},fromJSON:function(Q){return Q}};function E(Q){if(isFinite(Q)){return Q}else{return String(Q)}}function m(Q){return Number(Q)}var w={init:function(Q){},toJSON:E,fromJSON:m};var k={init:function(Q){},toJSON:function(Q){var R=Q.toISOString();if(Q.unspecified){R=R.substring(0,R.length-1)}return R},fromJSON:function(R){var S=R.charAt(R.length-1).toLowerCase()!="z";var Q=new Date(R);Q.unspecified=S;return Q}};var z={init:function(Q){},toJSON:function(Q){return Q},fromJSON:function(Q){return Q}};function c(Q){var S="";for(var R=0;R<Q.length;R++){S=S+String.fromCharCode(Q[R])}return btoa(S)}function b(Q){var S=atob(Q);var T=new Uint8Array(S.length);for(var R=0;R<T.length;R++){T[R]=S.charCodeAt(R)}return T}var f={init:function(Q){},toJSON:function(Q){return c(Q)},fromJSON:function(Q){return b(Q)}};var G={init:function(Q){},toJSON:function(Q){return Q},fromJSON:function(Q){return Q}};var a=(function(){function Q(R){this.element=R}Q.prototype.init=function(R){this.inner=R.getSerializer(this.element)};Q.prototype.toJSON=function(S){var R=this;return S.map(function(T){return R.inner.toJSON(T)})};Q.prototype.fromJSON=function(S){var R=this;return S.map(function(T){return R.inner.fromJSON(T)})};return Q}());var o=(function(){function Q(R){this.element=R}Q.prototype.init=function(R){this.inner=R.getSerializer(this.element)};Q.prototype.toJSON=function(S){var R=this;var T={};S.forEach(function(U,V){T[U]=R.inner.toJSON(V)});return T};Q.prototype.fromJSON=function(R){var T=new n();for(var S in R){T.setAt(S,this.inner.fromJSON(R[S]))}return T};return Q}());var y=(function(){function Q(R){this.element=R}Q.prototype.init=function(R){this.inner=R.getSerializer(this.element)};Q.prototype.toJSON=function(R){return R===null?null:[this.inner.toJSON(R)]};Q.prototype.fromJSON=function(R){return R===null?null:this.inner.fromJSON(R[0])};return Q}());var H=(function(){function Q(R){this.elements=R}Q.prototype.length=function(){return this.elements.length};Q.prototype.init=function(R){this.inner=this.elements.map(function(S){return R.getSerializer(S)})};Q.prototype.toJSON=function(U){var S=this.length();var T=new Array(S);for(var R=0;R<S;R++){T[R]=this.inner[R].toJSON(U[R])}return T};Q.prototype.fromJSON=function(S){var T=this.length();var U=new Array(T);for(var R=0;R<T;R++){U[R]=this.inner[R].fromJSON(S[R])}return U};return Q}());function e(Q){switch(Q.tag){case"ArrayType":return new a(Q.Item);case"ListType":return new a(Q.Item);case"SequenceType":return new a(Q.Item);case"BooleanType":return d;case"BytesType":return f;case"DateTimeType":return k;case"DoubleType":return w;case"IntType":return w;case"JsonType":return z;case"OptionType":return new y(Q.Item);case"StringDictType":return new o(Q.Item);case"StringType":return G;case"TupleType":return new H(Q.Item);default:throw new Error("Invalid DataType")}}var L=(function(){function Q(){this.activators=new n()}Q.prototype.registerActivators=function(S){var R=this;S.forEach(function(T){R.activators.setAt(T.typeId,T)})};Q.prototype.fullCaseName=function(T,R){var S=T.lastIndexOf(".");if(S===-1){return R}else{return T.substr(0,S)+"."+R}};Q.prototype.createRecord=function(S,R){return this.activators.at(S).createInstance(R)};Q.prototype.createUnion=function(T,S,R){return this.activators.at(this.fullCaseName(T,S)).createInstance(R)};return Q}());var p=(function(){function Q(){}Q.prototype.init=function(R){};Q.prototype.toJSON=function(R){return R};Q.prototype.fromJSON=function(R){return R};return Q}());var B=(function(){function Q(R,S){this.record=R;this.typeRegistry=S}Q.prototype.init=function(R){this.fields=this.record.RecordFields.map(function(S){return{name:S.FieldName,ser:R.getSerializer(S.FieldType)}})};Q.prototype.toJSON=function(S){var R={};this.fields.forEach(function(T){R[T.name]=T.ser.toJSON(S[T.name])});return R};Q.prototype.fromJSON=function(U){var V=this.fields.length;var R=new Array(V);for(var T=0;T<V;T++){var S=this.fields[T];R[T]=S.ser.fromJSON(U[S.name])}return this.typeRegistry.createRecord(this.record.RecordName,R)};return Q}());var q=(function(){function Q(){}return Q}());var g=(function(){function Q(){}return Q}());var M=(function(){function Q(S,R){this.union=S;this.typeRegistry=R}Q.prototype.init=function(R){this.cases=this.union.UnionCases.map(function(S){return{caseName:S.CaseName,fields:S.CaseFields.map(function(T){return{fieldName:T.FieldName,fieldSerializer:R.getSerializer(T.FieldType)}})}})};Q.prototype.findCase=function(T){for(var S=0;S<this.cases.length;S++){var R=this.cases[S];if(R.caseName===T){return R}}};Q.prototype.toJSON=function(Y){var T=typeof Y==="string";var V=T?Y:Y.tag;var W=this.findCase(V);if(W!==undefined){if(T){return[V]}else{var U=new Array(W.fields.length+1);U[0]=V;for(var S=0;S<W.fields.length;S++){var R=W.fields[S];var X=Y[R.fieldName];U[S+1]=R.fieldSerializer.toJSON(X)}return U}}return null};Q.prototype.fromJSON=function(V){var S=this.findCase(V[0]);if(S!==undefined){var R=new Array(V.length-1);for(var U=0;U<R.length;U++){var T=S.fields[U];R[U]=T.fieldSerializer.fromJSON(V[U+1])}return this.typeRegistry.createUnion(this.union.UnionName,S.caseName,R)}else{return null}};return Q}());function K(Q){return{tag:"TypeReference",Item:Q}}function I(Q){return{tag:"TupleType",Item:Q}}var F=(function(){function Q(){this.dict=new n();this.registry=new L()}Q.prototype.add=function(R,T){var S=j(R);this.dict.setAt(S,T)};Q.prototype.getSerializer=function(R){var S=j(R);return this.dict.at(S)};Q.prototype.contains=function(R){var S=j(R);return this.dict.containsKey(S)};Q.prototype.init=function(){var R=this;this.dict.forEach(function(S,T){T.init(R)})};Q.prototype.registerActivators=function(R){this.registry.registerActivators(R)};Q.prototype.createVisitor=function(){var R=this;var T=l();var S=function(U){if(!R.contains(U)){R.add(U,e(U))}};T.visitDataType=function(U){if(U.tag!=="TypeReference"){S(U)}};T.visitRecord=function(V){var U=K(V.RecordName);R.add(U,new B(V,R.registry))};T.visitUnion=function(V){var U=K(V.UnionName);R.add(U,new M(V,R.registry))};T.visitEnum=function(V){var U=K(V.EnumName);R.add(U,new p())};return T};Q.prototype.registerTypes=function(R){P(R,this.createVisitor());this.init()};Q.prototype.registerServiceMethods=function(R){O(R,this.createVisitor());this.init()};return Q}());var h=(function(){function Q(R,S){if(R===void 0){R=new u()}this.httpClient=R;if(!S){this.prefix="/gluon-api"}else{this.prefix=S}}return Q}());s.Client=h;var u=(function(){function Q(){}Q.prototype.httpGet=function(T,S,R){return jQuery.ajax({url:T,type:"get",data:S}).then(function(U){return R(U)})};Q.prototype.httpCall=function(S,W,T,U){var R={url:W,type:S};if(x.isSome(T)){R.data=T;R.dataType="json";R.contentType="application/json"}var V=jQuery.ajax(R);if(x.isSome(U)){return V.then(function(X){return U(X)})}else{return V}};return Q}());var D;(function(V){function X(Y){switch(Y){case"Get":return"get";case"Delete":return"delete";case"Post":return"post";case"Put":return"put";default:throw new Error("match failed")}}function W(Y){switch(Y.tag){case"HttpCallingConvention":return Y.Item1;default:throw new Error("match failed")}}function T(Y){switch(Y.tag){case"HttpCallingConvention":return Y.path;default:throw new Error("match failed")}}function S(Y,Z){return Y.prefix+"/"+T(Z.CallingConvention)}function R(Z,aa,Y){var ab={};aa.innerMethod.MethodParameters.forEach(function(ad,ac){ab[ad.ParameterName]=JSON.stringify(aa.parameterSerializers[ac].toJSON(Y[ac]))});return ab}function Q(Z,ab,Y){var aa;if(ab.arity==0){return null}else{if(ab.arity==1){aa=Y[0]}else{aa=Y}}return JSON.stringify(ab.jointParametersSerializer.toJSON(aa))}function U(Z,ad,Y){function ac(ah){if(ad.doesReturn){var ag=ad.returnTypeSerializer.fromJSON(ah);return ag}else{return ah}}var af=S(Z,ad.innerMethod);var aa=W(ad.innerMethod.CallingConvention);switch(aa){case"Get":var ae=R(Z,ad,Y);return Z.httpClient.httpGet(af,ae,ac);default:var ab=Q(Z,ad,Y);return Z.httpClient.httpCall(X(aa),af,ab,ac)}}V.remoteCall=U})(D||(D={}));var C=(function(){function Q(R,S){this.innerMethod=S;this.arity=S.MethodParameters.length;switch(this.arity){case 0:break;case 1:var T=R.getSerializer(S.MethodParameters[0].ParameterType);this.jointParametersSerializer=T;this.parameterSerializers=[T];break;default:this.parameterSerializers=S.MethodParameters.map(function(U){return R.getSerializer(U.ParameterType)});this.jointParametersSerializer=R.getSerializer(I(S.MethodParameters.map(function(U){return U.ParameterType})));break}if(!!S.MethodReturnType){this.doesReturn=true;this.returnTypeSerializer=R.getSerializer(S.MethodReturnType)}else{this.doesReturn=false}}Q.prototype.call=function(S,R){return D.remoteCall(S,this,R)};return Q}());var v=(function(){function Q(R){this.factory=R;this.table=new n()}Q.prototype.registerService=function(S){var R=this;S.Methods.forEach(function(T){var U=new C(R.factory,T);R.table.setAt(T.MethodName,U)})};Q.prototype.getProxy=function(R){return this.table.at(R)};Q.prototype.remoteMethod=function(S){var R=this;return function(U){var V=R.getProxy(S);function T(){var W=arguments;return V.call(U,W)}return T}};return Q}());var A;(function(ad){function Q(ai,aj){return ai[aj+1]}function ac(aj){var ai=aj;return ai.slice(1)}function af(ai){return ai[0]}function S(ai){switch(af(ai)){case"ArrayType":return{tag:"ArrayType",Item:S(Q(ai,0))};case"BooleanType":return{tag:"BooleanType"};case"BytesType":return{tag:"BytesType"};case"DateTimeType":return{tag:"DateTimeType"};case"DoubleType":return{tag:"DoubleType"};case"IntType":return{tag:"IntType"};case"JsonType":return{tag:"JsonType"};case"ListType":return{tag:"ListType",Item:S(Q(ai,0))};case"OptionType":return{tag:"OptionType",Item:S(Q(ai,0))};case"SequenceType":return{tag:"SequenceType",Item:S(Q(ai,0))};case"StringDictType":return{tag:"StringDictType",Item:S(Q(ai,0))};case"StringType":return{tag:"StringType"};case"TupleType":return{tag:"TupleType",Item:Q(ai,0).map(S)};case"TypeReference":return{tag:"TypeReference",Item:Q(ai,0)};default:throw new Error("failed to parse a data type")}}function U(ai){return{FieldName:ai.FieldName,FieldType:S(ai.FieldType)}}function ae(ai){return{RecordName:ai.RecordName,RecordFields:ai.RecordFields.map(U)}}function ah(ai){return{CaseName:ai.CaseName,CaseFields:ai.CaseFields.map(U)}}function ag(ai){return{UnionName:ai.UnionName,UnionCases:ai.UnionCases.map(ah)}}function T(ai){return{EnumCaseName:ai.EnumCaseName,EnumCaseValue:ai.EnumCaseValue}}function Z(ai){return{EnumName:ai.EnumName,EnumCases:ai.EnumCases.map(T)}}function ab(ai){switch(af(ai)){case"DefineRecord":return{tag:"DefineRecord",Item:ae(Q(ai,0))};case"DefineUnion":return{tag:"DefineUnion",Item:ag(Q(ai,0))};case"DefineEnum":return{tag:"DefineEnum",Item:Z(Q(ai,0))};default:throw new Error("error parsing type definition")}}ad.parseTypeDefinition=ab;function Y(ai){return{ParameterName:ai.ParameterName,ParameterType:S(ai.ParameterType)}}function V(aj){var ai=af(aj);switch(ai){case"Delete":return ai;case"Get":return ai;case"Post":return ai;case"Put":return ai;default:throw new Error("error parsing http method")}}function R(ai){switch(af(ai)){case"HttpCallingConvention":return{tag:"HttpCallingConvention",Item1:V(Q(ai,0)),path:Q(ai,1)};default:throw new Error("error parsing calling convention")}}function X(ai,aj){return ai===null?null:aj(ai[0])}function W(aj){var ai=R(aj.CallingConvention);var ak=aj.MethodName;var al=aj.MethodParameters.map(Y);var am=X(aj.MethodReturnType,S);return{CallingConvention:ai,MethodName:ak,MethodParameters:al,MethodReturnType:am}}function aa(ai){return{Methods:ai.Methods.map(W),TypeDefinitions:ai.TypeDefinitions.map(ab)}}ad.parseServiceSchema=aa})(A||(A={}));var t;(function(R){var X=new F();var S=new v(X);function Y(Z,aa){return X.getSerializer({tag:"TypeReference",Item:Z}).toJSON(aa)}R.toJSON=Y;function Q(aa,Z){return X.getSerializer({tag:"TypeReference",Item:aa}).fromJSON(Z)}R.fromJSON=Q;function T(ac){var Z=[];function aa(ae,ad){Z.push({typeId:ab,createInstance:function(af){return ad.apply(null,af)}})}for(var ab in ac){aa(ab,ac[ab])}X.registerActivators(Z)}R.registerActivators=T;function V(Z){var aa=Z.map(A.parseTypeDefinition);X.registerTypes(aa)}R.registerTypeDefinitions=V;function U(Z){var aa=A.parseServiceSchema(Z);X.registerTypes(aa.TypeDefinitions);X.registerServiceMethods(aa.Methods);S.registerService(aa)}R.registerService=U;function W(Z){return S.remoteMethod(Z)}R.remoteMethod=W})(t=s.Internals||(s.Internals={}))})(Gluon||(Gluon={}));Gluon.Internals.registerActivators({"Gluon.Schema.Delete":function(){return"Delete"},"Gluon.Schema.Get":function(){return"Get"},"Gluon.Schema.Post":function(){return"Post"},"Gluon.Schema.Put":function(){return"Put"},"Gluon.Schema.HttpCallingConvention":function(a,b){return({tag:"HttpCallingConvention",Item1:a,path:b})},"Gluon.Schema.ArrayType":function(b){return({tag:"ArrayType",Item:b})},"Gluon.Schema.BooleanType":function(){return({tag:"BooleanType"})},"Gluon.Schema.BytesType":function(){return({tag:"BytesType"})},"Gluon.Schema.DateTimeType":function(){return({tag:"DateTimeType"})},"Gluon.Schema.DoubleType":function(){return({tag:"DoubleType"})},"Gluon.Schema.IntType":function(){return({tag:"IntType"})},"Gluon.Schema.JsonType":function(){return({tag:"JsonType"})},"Gluon.Schema.ListType":function(b){return({tag:"ListType",Item:b})},"Gluon.Schema.OptionType":function(b){return({tag:"OptionType",Item:b})},"Gluon.Schema.SequenceType":function(b){return({tag:"SequenceType",Item:b})},"Gluon.Schema.StringDictType":function(b){return({tag:"StringDictType",Item:b})},"Gluon.Schema.StringType":function(){return({tag:"StringType"})},"Gluon.Schema.TupleType":function(b){return({tag:"TupleType",Item:b})},"Gluon.Schema.TypeReference":function(b){return({tag:"TypeReference",Item:b})},"Gluon.Schema.Parameter":function(c,d){return({ParameterName:c,ParameterType:d})},"Gluon.Schema.Method":function(e,f,g,h){return({CallingConvention:e,MethodName:f,MethodParameters:g,MethodReturnType:h})},"Gluon.Schema.EnumCase":function(c,d){return({EnumCaseName:c,EnumCaseValue:d})},"Gluon.Schema.Enum":function(c,d){return({EnumName:c,EnumCases:d})},"Gluon.Schema.Field":function(c,d){return({FieldName:c,FieldType:d})},"Gluon.Schema.Record":function(c,d){return({RecordName:c,RecordFields:d})},"Gluon.Schema.UnionCase":function(c,d){return({CaseName:c,CaseFields:d})},"Gluon.Schema.Union":function(c,d){return({UnionName:c,UnionCases:d})},"Gluon.Schema.DefineEnum":function(b){return({tag:"DefineEnum",Item:b})},"Gluon.Schema.DefineRecord":function(b){return({tag:"DefineRecord",Item:b})},"Gluon.Schema.DefineUnion":function(b){return({tag:"DefineUnion",Item:b})},"Gluon.Schema.Service":function(c,d){return({Methods:c,TypeDefinitions:d})}});Gluon.Internals.registerTypeDefinitions([["DefineUnion",{UnionName:"Gluon.Schema.HttpMethod",UnionCases:[{CaseName:"Delete",CaseFields:[]},{CaseName:"Get",CaseFields:[]},{CaseName:"Post",CaseFields:[]},{CaseName:"Put",CaseFields:[]}]}],["DefineUnion",{UnionName:"Gluon.Schema.CallingConvention",UnionCases:[{CaseName:"HttpCallingConvention",CaseFields:[{FieldName:"Item1",FieldType:["TypeReference","Gluon.Schema.HttpMethod"]},{FieldName:"path",FieldType:["StringType"]}]}]}],["DefineUnion",{UnionName:"Gluon.Schema.DataType",UnionCases:[{CaseName:"ArrayType",CaseFields:[{FieldName:"Item",FieldType:["TypeReference","Gluon.Schema.DataType"]}]},{CaseName:"BooleanType",CaseFields:[]},{CaseName:"BytesType",CaseFields:[]},{CaseName:"DateTimeType",CaseFields:[]},{CaseName:"DoubleType",CaseFields:[]},{CaseName:"IntType",CaseFields:[]},{CaseName:"JsonType",CaseFields:[]},{CaseName:"ListType",CaseFields:[{FieldName:"Item",FieldType:["TypeReference","Gluon.Schema.DataType"]}]},{CaseName:"OptionType",CaseFields:[{FieldName:"Item",FieldType:["TypeReference","Gluon.Schema.DataType"]}]},{CaseName:"SequenceType",CaseFields:[{FieldName:"Item",FieldType:["TypeReference","Gluon.Schema.DataType"]}]},{CaseName:"StringDictType",CaseFields:[{FieldName:"Item",FieldType:["TypeReference","Gluon.Schema.DataType"]}]},{CaseName:"StringType",CaseFields:[]},{CaseName:"TupleType",CaseFields:[{FieldName:"Item",FieldType:["ListType",["TypeReference","Gluon.Schema.DataType"]]}]},{CaseName:"TypeReference",CaseFields:[{FieldName:"Item",FieldType:["StringType"]}]}]}],["DefineRecord",{RecordName:"Gluon.Schema.Parameter",RecordFields:[{FieldName:"ParameterName",FieldType:["StringType"]},{FieldName:"ParameterType",FieldType:["TypeReference","Gluon.Schema.DataType"]}]}],["DefineRecord",{RecordName:"Gluon.Schema.Method",RecordFields:[{FieldName:"CallingConvention",FieldType:["TypeReference","Gluon.Schema.CallingConvention"]},{FieldName:"MethodName",FieldType:["StringType"]},{FieldName:"MethodParameters",FieldType:["ListType",["TypeReference","Gluon.Schema.Parameter"]]},{FieldName:"MethodReturnType",FieldType:["OptionType",["TypeReference","Gluon.Schema.DataType"]]}]}],["DefineRecord",{RecordName:"Gluon.Schema.EnumCase",RecordFields:[{FieldName:"EnumCaseName",FieldType:["StringType"]},{FieldName:"EnumCaseValue",FieldType:["IntType"]}]}],["DefineRecord",{RecordName:"Gluon.Schema.Enum",RecordFields:[{FieldName:"EnumName",FieldType:["StringType"]},{FieldName:"EnumCases",FieldType:["ListType",["TypeReference","Gluon.Schema.EnumCase"]]}]}],["DefineRecord",{RecordName:"Gluon.Schema.Field",RecordFields:[{FieldName:"FieldName",FieldType:["StringType"]},{FieldName:"FieldType",FieldType:["TypeReference","Gluon.Schema.DataType"]}]}],["DefineRecord",{RecordName:"Gluon.Schema.Record",RecordFields:[{FieldName:"RecordName",FieldType:["StringType"]},{FieldName:"RecordFields",FieldType:["ListType",["TypeReference","Gluon.Schema.Field"]]}]}],["DefineRecord",{RecordName:"Gluon.Schema.UnionCase",RecordFields:[{FieldName:"CaseName",FieldType:["StringType"]},{FieldName:"CaseFields",FieldType:["ListType",["TypeReference","Gluon.Schema.Field"]]}]}],["DefineRecord",{RecordName:"Gluon.Schema.Union",RecordFields:[{FieldName:"UnionName",FieldType:["StringType"]},{FieldName:"UnionCases",FieldType:["ListType",["TypeReference","Gluon.Schema.UnionCase"]]}]}],["DefineUnion",{UnionName:"Gluon.Schema.TypeDefinition",UnionCases:[{CaseName:"DefineEnum",CaseFields:[{FieldName:"Item",FieldType:["TypeReference","Gluon.Schema.Enum"]}]},{CaseName:"DefineRecord",CaseFields:[{FieldName:"Item",FieldType:["TypeReference","Gluon.Schema.Record"]}]},{CaseName:"DefineUnion",CaseFields:[{FieldName:"Item",FieldType:["TypeReference","Gluon.Schema.Union"]}]}]}],["DefineRecord",{RecordName:"Gluon.Schema.Service",RecordFields:[{FieldName:"Methods",FieldType:["ListType",["TypeReference","Gluon.Schema.Method"]]},{FieldName:"TypeDefinitions",FieldType:["ListType",["TypeReference","Gluon.Schema.TypeDefinition"]]}]}]]);