var Gluon;(function(e){var t;(function(e){var t=function(){function e(){}return e}();e.Parameter=t;var n=function(){function e(){}return e}();e.Method=n;var r=function(){function e(){}return e}();e.EnumCase=r;var i=function(){function e(){}return e}();e.Enum=i;var a=function(){function e(){}return e}();e.Field=a;var o=function(){function e(){}return e}();e.Record=o;var u=function(){function e(){}return e}();e.UnionCase=u;var c=function(){function e(){}return e}();e.Union=c})(t=e.Schema||(e.Schema={}))})(Gluon||(Gluon={}));(function(e){var t;(function(e){function t(e){return{isSome:true,value:e}}e.some=t;function n(){return{isSome:false}}e.none=n;function r(e){if(e===null){return n()}}e.fromJSON=r;function i(e){if(e.isSome){return[e.value]}else{return null}}e.toJSON=i;function a(e,t){if(e.isSome){return e.value}else{return t}}e.withDefault=a})(t=e.Option||(e.Option={}));var n=function(){function e(){this.data={}}e.prototype.check=function(e){if(typeof e!=="string"){throw new Error("Invalid or null key")}};e.prototype.containsKey=function(e){this.check(e);return this.data.hasOwnProperty(e)};e.prototype.forEach=function(e){for(var t in this.data){if(this.data.hasOwnProperty(t)){e(t,this.data[t])}}};e.prototype.copy=function(){var t=new e;this.forEach(function(e,n){return t.setAt(e,n)});return t};e.prototype.at=function(e){this.check(e);if(this.data.hasOwnProperty(e)){return this.data[e]}else{throw new Error("Missing key: "+e)}};e.prototype.tryFind=function(e){this.check(e);if(this.data.hasOwnProperty(e)){return t.some(this.data[e])}else{return t.none()}};e.prototype.setAt=function(e,t){this.check(e);this.data[e]=t};e.prototype.toJSON=function(){return this.data};return e}();e.Dict=n;var r;(function(e){function t(e){switch(e.tag){case"ArrayType":return[e.Item];case"ListType":return[e.Item];case"OptionType":return[e.Item];case"SequenceType":return[e.Item];case"StringDictType":return[e.Item];case"TupleType":return e.Item;default:return[]}}e.children=t})(r||(r={}));function i(){return{visitDataType:function(e){},visitRecord:function(e){},visitUnion:function(e){},visitEnum:function(e){}}}function a(e,t){t.visitDataType(e);r.children(e).forEach(function(e){return a(e,t)})}function o(e,t){function n(e){a(e.FieldType,t)}function r(e){t.visitRecord(e);e.RecordFields.forEach(n)}function i(e){e.CaseFields.forEach(n)}function o(e){t.visitUnion(e);e.UnionCases.forEach(i)}function u(e){t.visitEnum(e)}function c(e){switch(e.tag){case"DefineUnion":return o(e.Item);case"DefineRecord":return r(e.Item);case"DefineEnum":return u(e.Item);default:throw new Error("match failed")}}e.forEach(c)}function u(e,t){function n(e){a(e.ParameterType,t)}function r(e){e.MethodParameters.forEach(n);if(e.MethodParameters.length>1){var r=M(e.MethodParameters.map(function(e){return e.ParameterType}));a(r,t)}if(e.MethodReturnType.isSome){a(e.MethodReturnType.value,t)}}e.forEach(r)}function c(e){function t(e){switch(e.tag){case"ArrayType":return[":array",t(e.Item)];case"BooleanType":return":bool";case"BytesType":return":bytes";case"DateTimeType":return":datetime";case"DoubleType":return":double";case"IntType":return":int";case"JsonType":return":json";case"ListType":return[":list",t(e.Item)];case"OptionType":return[":option",t(e.Item)];case"SequenceType":return[":seq",t(e.Item)];case"StringDictType":return[":sdict",t(e.Item)];case"StringType":return":str";case"TupleType":return[":tup"].concat(e.Item.map(function(e){return t(e)}));case"TypeReference":return e.Item;default:throw new Error("match failed")}}return JSON.stringify(t(e))}function s(e){switch(e.tag){case"DefineEnum":return e.Item.EnumName;case"DefineRecord":return e.Item.RecordName;case"DefineUnion":return e.Item.UnionName;default:throw new Error("match failed")}}function f(e,t){return e.TypeDefinitions.filter(function(e){return s(e)===t})[0]}var p={init:function(e){},toJSON:function(e){return e},fromJSON:function(e){return e}};function l(e){if(isFinite(e)){return e}else{return String(e)}}function m(e){return Number(e)}var y={init:function(e){},toJSON:l,fromJSON:m};var d={init:function(e){},toJSON:function(e){var t=e.toISOString();if(e.unspecified){t=t.substring(0,t.length-1)}return t},fromJSON:function(e){var t=e.charAt(e.length-1).toLowerCase()!="z";var n=new Date(e);n.unspecified=t;return n}};var h={init:function(e){},toJSON:function(e){return e},fromJSON:function(e){return e}};function T(e){var t="";for(var n=0;n<e.length;n++){t=t+String.fromCharCode(e[n])}return btoa(t)}function S(e){var t=atob(e);var n=new Uint8Array(t.length);for(var r=0;r<n.length;r++){n[r]=t.charCodeAt(r)}return n}var v={init:function(e){},toJSON:function(e){return T(e)},fromJSON:function(e){return S(e)}};var N={init:function(e){},toJSON:function(e){return e},fromJSON:function(e){return e}};var g=function(){function e(e){this.element=e}e.prototype.init=function(e){this.inner=e.getSerializer(this.element)};e.prototype.toJSON=function(e){var t=this;return e.map(function(e){return t.inner.toJSON(e)})};e.prototype.fromJSON=function(e){var t=this;return e.map(function(e){return t.inner.fromJSON(e)})};return e}();var C=function(){function e(e){this.element=e}e.prototype.init=function(e){this.inner=e.getSerializer(this.element)};e.prototype.toJSON=function(e){var t=this;var n={};e.forEach(function(e,r){n[e]=t.inner.toJSON(r)});return n};e.prototype.fromJSON=function(e){var t=new n;for(var r in e){t.setAt(r,this.inner.fromJSON(e[r]))}return t};return e}();var F=function(){function e(e){this.element=e}e.prototype.init=function(e){this.inner=e.getSerializer(this.element)};e.prototype.toJSON=function(e){if(e.isSome){return[this.inner.toJSON(e.value)]}else{return null}};e.prototype.fromJSON=function(e){if(e===null){return t.none()}else{return t.some(this.inner.fromJSON(e[0]))}};return e}();var R=function(){function e(e){this.elements=e}e.prototype.length=function(){return this.elements.length};e.prototype.init=function(e){this.inner=this.elements.map(function(t){return e.getSerializer(t)})};e.prototype.toJSON=function(e){var t=this.length();var n=new Array(t);for(var r=0;r<t;r++){n[r]=this.inner[r].toJSON(e[r])}return n};e.prototype.fromJSON=function(e){var t=this.length();var n=new Array(t);for(var r=0;r<t;r++){n[r]=this.inner[r].fromJSON(e[r])}return n};return e}();function D(e){switch(e.tag){case"ArrayType":return new g(e.Item);case"ListType":return new g(e.Item);case"SequenceType":return new g(e.Item);case"BooleanType":return p;case"BytesType":return v;case"DateTimeType":return d;case"DoubleType":return y;case"IntType":return y;case"JsonType":return h;case"OptionType":return new F(e.Item);case"StringDictType":return new C(e.Item);case"StringType":return N;case"TupleType":return new R(e.Item);default:throw new Error("Invalid DataType")}}var I=function(){function e(){this.activators=new n}e.prototype.registerActivators=function(e){var t=this;e.forEach(function(e){t.activators.setAt(e.typeId,e)})};e.prototype.fullCaseName=function(e,t){var n=e.lastIndexOf(".");if(n===-1){return t}else{return e.substr(0,n)+"."+t}};e.prototype.createRecord=function(e,t){return this.activators.at(e).createInstance(t)};e.prototype.createUnion=function(e,t,n){return this.activators.at(this.fullCaseName(e,t)).createInstance(n)};return e}();var G=function(){function e(){}e.prototype.init=function(e){};e.prototype.toJSON=function(e){return e};e.prototype.fromJSON=function(e){return e};return e}();var w=function(){function e(e,t){this.record=e;this.typeRegistry=t}e.prototype.init=function(e){this.fields=this.record.RecordFields.map(function(t){return{name:t.FieldName,ser:e.getSerializer(t.FieldType)}})};e.prototype.toJSON=function(e){var t={};this.fields.forEach(function(n){t[n.name]=n.ser.toJSON(e[n.name])});return t};e.prototype.fromJSON=function(e){var t=this.fields.length;var n=new Array(t);for(var r=0;r<t;r++){var i=this.fields[r];n[r]=i.ser.fromJSON(e[i.name])}return this.typeRegistry.createRecord(this.record.RecordName,n)};return e}();var O=function(){function e(){}return e}();var E=function(){function e(){}return e}();var J=function(){function e(e,t){this.union=e;this.typeRegistry=t}e.prototype.init=function(e){this.cases=this.union.UnionCases.map(function(t){return{caseName:t.CaseName,fields:t.CaseFields.map(function(t){return{fieldName:t.FieldName,fieldSerializer:e.getSerializer(t.FieldType)}})}})};e.prototype.findCase=function(e){for(var t=0;t<this.cases.length;t++){var n=this.cases[t];if(n.caseName===e){return n}}};e.prototype.toJSON=function(e){var t=typeof e==="string";var n=t?e:e.tag;var r=this.findCase(n);if(r!==undefined){if(t){return[n]}else{var i=new Array(r.fields.length+1);i[0]=n;for(var a=0;a<r.fields.length;a++){var o=r.fields[a];var u=e[o.fieldName];i[a+1]=o.fieldSerializer.toJSON(u)}return i}}return null};e.prototype.fromJSON=function(e){var t=this.findCase(e[0]);if(t!==undefined){var n=new Array(e.length-1);for(var r=0;r<n.length;r++){var i=t.fields[r];n[r]=i.fieldSerializer.fromJSON(e[r+1])}return this.typeRegistry.createUnion(this.union.UnionName,t.caseName,n)}else{return null}};return e}();function P(e){return{tag:"TypeReference",Item:e}}function M(e){return{tag:"TupleType",Item:e}}var U=function(){function e(){this.dict=new n;this.registry=new I}e.prototype.add=function(e,t){var n=c(e);this.dict.setAt(n,t)};e.prototype.getSerializer=function(e){var t=c(e);return this.dict.at(t)};e.prototype.contains=function(e){var t=c(e);return this.dict.containsKey(t)};e.prototype.init=function(){var e=this;this.dict.forEach(function(t,n){n.init(e)})};e.prototype.registerActivators=function(e){this.registry.registerActivators(e)};e.prototype.createVisitor=function(){var e=this;var t=i();var n=function(t){if(!e.contains(t)){e.add(t,D(t))}};t.visitDataType=function(e){if(e.tag!=="TypeReference"){n(e)}};t.visitRecord=function(t){var n=P(t.RecordName);e.add(n,new w(t,e.registry))};t.visitUnion=function(t){var n=P(t.UnionName);e.add(n,new J(t,e.registry))};t.visitEnum=function(t){var n=P(t.EnumName);e.add(n,new G)};return t};e.prototype.registerTypes=function(e){o(e,this.createVisitor());this.init()};e.prototype.registerServiceMethods=function(e){u(e,this.createVisitor());this.init()};return e}();var A=function(){function e(e,t){if(e===void 0){e=new z}this.httpClient=e;if(!t){this.prefix="/gluon-api"}else{this.prefix=t}}return e}();e.Client=A;var z=function(){function e(){}e.prototype.httpGet=function(e,t,n){return jQuery.ajax({url:e,type:"get",data:t}).then(function(e){return n(e)})};e.prototype.httpCall=function(e,t,n,r){var i={url:t,type:e};if(n!==null){i.data=n;i.dataType="json";i.contentType="application/json"}return jQuery.ajax(i).then(function(e){return r(e)})};return e}();var b;(function(e){function t(e){switch(e){case"Get":return"get";case"Delete":return"delete";case"Post":return"post";case"Put":return"put";default:throw new Error("match failed")}}function n(e){switch(e.tag){case"HttpCallingConvention":return e.Item1;default:throw new Error("match failed")}}function r(e){switch(e.tag){case"HttpCallingConvention":return e.path;default:throw new Error("match failed")}}function i(e,t){return e.prefix+"/"+r(t.CallingConvention)}function a(e,t,n){var r={};t.innerMethod.MethodParameters.forEach(function(e,i){r[e.ParameterName]=JSON.stringify(t.parameterSerializers[i].toJSON(n[i]))});return r}function o(e,t,n){var r;if(t.arity==0){return null}else if(t.arity==1){r=n[0]}else{r=n}return JSON.stringify(t.jointParametersSerializer.toJSON(r))}function u(e,r,u){function c(e){if(r.doesReturn){var t=r.returnTypeSerializer.fromJSON(e);return t}else{return e}}var s=i(e,r.innerMethod);var f=n(r.innerMethod.CallingConvention);switch(f){case"Get":var p=a(e,r,u);return e.httpClient.httpGet(s,p,c);default:var l=o(e,r,u);return e.httpClient.httpCall(t(f),s,l,c)}}e.remoteCall=u})(b||(b={}));var L=function(){function e(e,t){this.innerMethod=t;this.arity=t.MethodParameters.length;switch(this.arity){case 0:break;case 1:var n=e.getSerializer(t.MethodParameters[0].ParameterType);this.jointParametersSerializer=n;this.parameterSerializers=[n];break;default:this.parameterSerializers=t.MethodParameters.map(function(t){return e.getSerializer(t.ParameterType)});this.jointParametersSerializer=e.getSerializer(M(t.MethodParameters.map(function(e){return e.ParameterType})));break}if(t.MethodReturnType.isSome){this.doesReturn=true;this.returnTypeSerializer=e.getSerializer(t.MethodReturnType.value)}else{this.doesReturn=false}}e.prototype.call=function(e,t){return b.remoteCall(e,this,t)};return e}();var B=function(){function e(e){this.factory=e;this.table=new n}e.prototype.registerService=function(e){var t=this;e.Methods.forEach(function(e){var n=new L(t.factory,e);t.table.setAt(e.MethodName,n)})};e.prototype.getProxy=function(e){return this.table.at(e)};e.prototype.remoteMethod=function(e){var t=this;return function(n){var r=t.getProxy(e);function i(){var e=arguments;return r.call(n,e)}return i}};return e}();var j;(function(e){function n(e,t){return e[t+1]}function r(e){var t=e;return t.slice(1)}function i(e){return e[0]}function a(e){switch(i(e)){case"ArrayType":return{tag:"ArrayType",Item:a(n(e,0))};case"BooleanType":return{tag:"BooleanType"};case"BytesType":return{tag:"BytesType"};case"DateTimeType":return{tag:"DateTimeType"};case"DoubleType":return{tag:"DoubleType"};case"IntType":return{tag:"IntType"};case"JsonType":return{tag:"JsonType"};case"ListType":return{tag:"ListType",Item:a(n(e,0))};case"OptionType":return{tag:"OptionType",Item:a(n(e,0))};case"SequenceType":return{tag:"SequenceType",Item:a(n(e,0))};case"StringDictType":return{tag:"StringDictType",Item:a(n(e,0))};case"StringType":return{tag:"StringType"};case"TupleType":return{tag:"TupleType",Item:n(e,0).map(a)};case"TypeReference":return{tag:"TypeReference",Item:n(e,0)};default:throw new Error("failed to parse a data type")}}function o(e){return{FieldName:e.FieldName,FieldType:a(e.FieldType)}}function u(e){return{RecordName:e.RecordName,RecordFields:e.RecordFields.map(o)}}function c(e){return{CaseName:e.CaseName,CaseFields:e.CaseFields.map(o)}}function s(e){return{UnionName:e.UnionName,UnionCases:e.UnionCases.map(c)}}function f(e){return{EnumCaseName:e.EnumCaseName,EnumCaseValue:e.EnumCaseValue}}function p(e){return{EnumName:e.EnumName,EnumCases:e.EnumCases.map(f)}}function l(e){switch(i(e)){case"DefineRecord":return{tag:"DefineRecord",Item:u(n(e,0))};case"DefineUnion":return{tag:"DefineUnion",Item:s(n(e,0))};case"DefineEnum":return{tag:"DefineEnum",Item:p(n(e,0))};default:throw new Error("error parsing type definition")}}e.parseTypeDefinition=l;function m(e){return{ParameterName:e.ParameterName,ParameterType:a(e.ParameterType)}}function y(e){var t=i(e);switch(t){case"Delete":return t;case"Get":return t;case"Post":return t;case"Put":return t;default:throw new Error("error parsing http method")}}function d(e){switch(i(e)){case"HttpCallingConvention":return{tag:"HttpCallingConvention",Item1:y(n(e,0)),path:n(e,1)};default:throw new Error("error parsing calling convention")}}function h(e,n){if(e===null){return t.none()}else{return t.some(n(e[0]))}}function T(e){var t=d(e.CallingConvention);var n=e.MethodName;var r=e.MethodParameters.map(m);var i=h(e.MethodReturnType,a);return{CallingConvention:t,MethodName:n,MethodParameters:r,MethodReturnType:i}}function S(e){return{Methods:e.Methods.map(T),TypeDefinitions:e.TypeDefinitions.map(l)}}e.parseServiceSchema=S})(j||(j={}));var k;(function(e){var t=new U;var n=new B(t);function r(e,n){return t.getSerializer({tag:"TypeReference",Item:e}).toJSON(n)}e.toJSON=r;function i(e,n){return t.getSerializer({tag:"TypeReference",Item:e}).fromJSON(n)}e.fromJSON=i;function a(e){var n=[];function r(e,t){n.push({typeId:i,createInstance:function(e){return t.apply(null,e)}})}for(var i in e){r(i,e[i])}t.registerActivators(n)}e.registerActivators=a;function o(e){var n=e.map(j.parseTypeDefinition);t.registerTypes(n)}e.registerTypeDefinitions=o;function u(e){var r=j.parseServiceSchema(e);t.registerTypes(r.TypeDefinitions);t.registerServiceMethods(r.Methods);n.registerService(r)}e.registerService=u;function c(e){return n.remoteMethod(e)}e.remoteMethod=c})(k=e.Internals||(e.Internals={}))})(Gluon||(Gluon={}));Gluon.Internals.registerActivators({"Gluon.Schema.Delete":function(){return"Delete"},"Gluon.Schema.Get":function(){return"Get"},"Gluon.Schema.Post":function(){return"Post"},"Gluon.Schema.Put":function(){return"Put"},"Gluon.Schema.HttpCallingConvention":function(e,t){return{tag:"HttpCallingConvention",Item1:e,path:t}},"Gluon.Schema.ArrayType":function(e){return{tag:"ArrayType",Item:e}},"Gluon.Schema.BooleanType":function(){return{tag:"BooleanType"}},"Gluon.Schema.BytesType":function(){return{tag:"BytesType"}},"Gluon.Schema.DateTimeType":function(){return{tag:"DateTimeType"}},"Gluon.Schema.DoubleType":function(){return{tag:"DoubleType"}},"Gluon.Schema.IntType":function(){return{tag:"IntType"}},"Gluon.Schema.JsonType":function(){return{tag:"JsonType"}},"Gluon.Schema.ListType":function(e){return{tag:"ListType",Item:e}},"Gluon.Schema.OptionType":function(e){return{tag:"OptionType",Item:e}},"Gluon.Schema.SequenceType":function(e){return{tag:"SequenceType",Item:e}},"Gluon.Schema.StringDictType":function(e){return{tag:"StringDictType",Item:e}},"Gluon.Schema.StringType":function(){return{tag:"StringType"}},"Gluon.Schema.TupleType":function(e){return{tag:"TupleType",Item:e}},"Gluon.Schema.TypeReference":function(e){return{tag:"TypeReference",Item:e}},"Gluon.Schema.Parameter":function(e,t){return{ParameterName:e,ParameterType:t}},"Gluon.Schema.Method":function(e,t,n,r){return{CallingConvention:e,MethodName:t,MethodParameters:n,MethodReturnType:r}},"Gluon.Schema.EnumCase":function(e,t){return{EnumCaseName:e,EnumCaseValue:t}},"Gluon.Schema.Enum":function(e,t){return{EnumName:e,EnumCases:t}},"Gluon.Schema.Field":function(e,t){return{FieldName:e,FieldType:t}},"Gluon.Schema.Record":function(e,t){return{RecordName:e,RecordFields:t}},"Gluon.Schema.UnionCase":function(e,t){return{CaseName:e,CaseFields:t}},"Gluon.Schema.Union":function(e,t){return{UnionName:e,UnionCases:t}},"Gluon.Schema.DefineEnum":function(e){return{tag:"DefineEnum",Item:e}},"Gluon.Schema.DefineRecord":function(e){return{tag:"DefineRecord",Item:e}},"Gluon.Schema.DefineUnion":function(e){return{tag:"DefineUnion",Item:e}},"Gluon.Schema.Service":function(e,t){return{Methods:e,TypeDefinitions:t}}});Gluon.Internals.registerTypeDefinitions([["DefineUnion",{UnionName:"Gluon.Schema.HttpMethod",UnionCases:[{CaseName:"Delete",CaseFields:[]},{CaseName:"Get",CaseFields:[]},{CaseName:"Post",CaseFields:[]},{CaseName:"Put",CaseFields:[]}]}],["DefineUnion",{UnionName:"Gluon.Schema.CallingConvention",UnionCases:[{CaseName:"HttpCallingConvention",CaseFields:[{FieldName:"Item1",FieldType:["TypeReference","Gluon.Schema.HttpMethod"]},{FieldName:"path",FieldType:["StringType"]}]}]}],["DefineUnion",{UnionName:"Gluon.Schema.DataType",UnionCases:[{CaseName:"ArrayType",CaseFields:[{FieldName:"Item",FieldType:["TypeReference","Gluon.Schema.DataType"]}]},{CaseName:"BooleanType",CaseFields:[]},{CaseName:"BytesType",CaseFields:[]},{CaseName:"DateTimeType",CaseFields:[]},{CaseName:"DoubleType",CaseFields:[]},{CaseName:"IntType",CaseFields:[]},{CaseName:"JsonType",CaseFields:[]},{CaseName:"ListType",CaseFields:[{FieldName:"Item",FieldType:["TypeReference","Gluon.Schema.DataType"]}]},{CaseName:"OptionType",CaseFields:[{FieldName:"Item",FieldType:["TypeReference","Gluon.Schema.DataType"]}]},{CaseName:"SequenceType",CaseFields:[{FieldName:"Item",FieldType:["TypeReference","Gluon.Schema.DataType"]}]},{CaseName:"StringDictType",CaseFields:[{FieldName:"Item",FieldType:["TypeReference","Gluon.Schema.DataType"]}]},{CaseName:"StringType",CaseFields:[]},{CaseName:"TupleType",CaseFields:[{FieldName:"Item",FieldType:["ListType",["TypeReference","Gluon.Schema.DataType"]]}]},{CaseName:"TypeReference",CaseFields:[{FieldName:"Item",FieldType:["StringType"]}]}]}],["DefineRecord",{RecordName:"Gluon.Schema.Parameter",RecordFields:[{FieldName:"ParameterName",FieldType:["StringType"]},{FieldName:"ParameterType",FieldType:["TypeReference","Gluon.Schema.DataType"]}]}],["DefineRecord",{RecordName:"Gluon.Schema.Method",RecordFields:[{FieldName:"CallingConvention",FieldType:["TypeReference","Gluon.Schema.CallingConvention"]},{FieldName:"MethodName",FieldType:["StringType"]},{FieldName:"MethodParameters",FieldType:["ListType",["TypeReference","Gluon.Schema.Parameter"]]},{FieldName:"MethodReturnType",FieldType:["OptionType",["TypeReference","Gluon.Schema.DataType"]]}]}],["DefineRecord",{RecordName:"Gluon.Schema.EnumCase",RecordFields:[{FieldName:"EnumCaseName",FieldType:["StringType"]},{FieldName:"EnumCaseValue",FieldType:["IntType"]}]}],["DefineRecord",{RecordName:"Gluon.Schema.Enum",RecordFields:[{FieldName:"EnumName",FieldType:["StringType"]},{FieldName:"EnumCases",FieldType:["ListType",["TypeReference","Gluon.Schema.EnumCase"]]}]}],["DefineRecord",{RecordName:"Gluon.Schema.Field",RecordFields:[{FieldName:"FieldName",FieldType:["StringType"]},{FieldName:"FieldType",FieldType:["TypeReference","Gluon.Schema.DataType"]}]}],["DefineRecord",{RecordName:"Gluon.Schema.Record",RecordFields:[{FieldName:"RecordName",FieldType:["StringType"]},{FieldName:"RecordFields",FieldType:["ListType",["TypeReference","Gluon.Schema.Field"]]}]}],["DefineRecord",{RecordName:"Gluon.Schema.UnionCase",RecordFields:[{FieldName:"CaseName",FieldType:["StringType"]},{FieldName:"CaseFields",FieldType:["ListType",["TypeReference","Gluon.Schema.Field"]]}]}],["DefineRecord",{RecordName:"Gluon.Schema.Union",RecordFields:[{FieldName:"UnionName",FieldType:["StringType"]},{FieldName:"UnionCases",FieldType:["ListType",["TypeReference","Gluon.Schema.UnionCase"]]}]}],["DefineUnion",{UnionName:"Gluon.Schema.TypeDefinition",UnionCases:[{CaseName:"DefineEnum",CaseFields:[{FieldName:"Item",FieldType:["TypeReference","Gluon.Schema.Enum"]}]},{CaseName:"DefineRecord",CaseFields:[{FieldName:"Item",FieldType:["TypeReference","Gluon.Schema.Record"]}]},{CaseName:"DefineUnion",CaseFields:[{FieldName:"Item",FieldType:["TypeReference","Gluon.Schema.Union"]}]}]}],["DefineRecord",{RecordName:"Gluon.Schema.Service",RecordFields:[{FieldName:"Methods",FieldType:["ListType",["TypeReference","Gluon.Schema.Method"]]},{FieldName:"TypeDefinitions",FieldType:["ListType",["TypeReference","Gluon.Schema.TypeDefinition"]]}]}]]);
//# sourceMappingURL=dist/Gluon.min.js.map