var Gluon;(function(s){var E;(function(X){var V=(function(){function aa(){}return aa}());X.Parameter=V;var U=(function(){function aa(){}return aa}());X.Method=U;var S=(function(){function aa(){}return aa}());X.EnumCase=S;var R=(function(){function aa(){}return aa}());X.Enum=R;var T=(function(){function aa(){}return aa}());X.Field=T;var W=(function(){function aa(){}return aa}());X.Record=W;var Z=(function(){function aa(){}return aa}());X.UnionCase=Z;var Y=(function(){function aa(){}return aa}());X.Union=Y})(E=s.Schema||(s.Schema={}));var x;(function(V){function W(Z){return Z}V.some=W;function T(Z){return Z!==undefined&&Z!==null}V.isSome=T;function U(){return null}V.none=U;function S(Z){return Z===undefined||Z===null}V.isNone=S;function R(Z){return T(Z)?(Z[0]):null}V.fromJSON=R;function X(Z){return T(Z)?[Z]:null}V.toJSON=X;function Y(aa,Z){return T(aa)?aa:Z}V.withDefault=Y})(x=s.Option||(s.Option={}));var n=(function(){function R(){this.data={}}R.prototype.check=function(S){if(typeof S!=="string"){throw new Error("Invalid or null key")}};R.prototype.containsKey=function(S){this.check(S);return this.data.hasOwnProperty(S)};R.prototype.forEach=function(T){for(var S in this.data){if(this.data.hasOwnProperty(S)){T(S,this.data[S])}}};R.prototype.copy=function(){var S=new R();this.forEach(function(U,T){return S.setAt(U,T)});return S};R.prototype.at=function(S){this.check(S);if(this.data.hasOwnProperty(S)){return this.data[S]}else{throw new Error("Missing key: "+S)}};R.prototype.tryFind=function(S){this.check(S);return this.data.hasOwnProperty(S)?this.data[S]:null};R.prototype.setAt=function(S,T){this.check(S);this.data[S]=T};R.prototype.toJSON=function(){return this.data};return R}());s.Dict=n;var i;(function(S){function R(T){switch(T.tag){case"ArrayType":return[T.Item];case"ListType":return[T.Item];case"OptionType":return[T.Item];case"SequenceType":return[T.Item];case"StringDictType":return[T.Item];case"TupleType":return T.Item;default:return[]}}S.children=R})(i||(i={}));function l(){return{visitDataType:function(R){},visitRecord:function(R){},visitUnion:function(R){},visitEnum:function(R){}}}function O(R,S){S.visitDataType(R);i.children(R).forEach(function(T){return O(T,S)})}function Q(R,V){function U(Z){O(Z.FieldType,V)}function W(Z){V.visitRecord(Z);Z.RecordFields.forEach(U)}function S(Z){Z.CaseFields.forEach(U)}function Y(Z){V.visitUnion(Z);Z.UnionCases.forEach(S)}function T(Z){V.visitEnum(Z)}function X(Z){switch(Z.tag){case"DefineUnion":return Y(Z.Item);case"DefineRecord":return W(Z.Item);case"DefineEnum":return T(Z.Item);default:throw new Error("match failed")}}R.forEach(X)}function P(R,T){function U(V){O(V.ParameterType,T)}function S(V){V.MethodParameters.forEach(U);if(V.MethodParameters.length>1){var W=J(V.MethodParameters.map(function(X){return X.ParameterType}));O(W,T)}if(!!V.MethodReturnType){O(V.MethodReturnType,T)}}R.forEach(S)}function j(R){function S(T){switch(T.tag){case"ArrayType":return[":array",S(T.Item)];case"BooleanType":return":bool";case"BytesType":return":bytes";case"DateTimeType":return":datetime";case"DoubleType":return":double";case"IntType":return":int";case"JsonType":return":json";case"ListType":return[":list",S(T.Item)];case"OptionType":return[":option",S(T.Item)];case"SequenceType":return[":seq",S(T.Item)];case"StringDictType":return[":sdict",S(T.Item)];case"StringType":return":str";case"TupleType":return[":tup"].concat(T.Item.map(function(U){return S(U)}));case"TypeReference":return T.Item;default:throw new Error("match failed")}}return JSON.stringify(S(R))}function K(R){switch(R.tag){case"DefineEnum":return R.Item.EnumName;case"DefineRecord":return R.Item.RecordName;case"DefineUnion":return R.Item.UnionName;default:throw new Error("match failed")}}function r(S,R){return S.TypeDefinitions.filter(function(T){return K(T)===R})[0]}var d={init:function(R){},toJSON:function(R){return R},fromJSON:function(R){return R}};function F(R){if(isFinite(R)){return R}else{return String(R)}}function m(R){return Number(R)}var w={init:function(R){},toJSON:F,fromJSON:m};var k={init:function(R){},toJSON:function(R){var S=R.toISOString();if(R.unspecified){S=S.substring(0,S.length-1)}return S},fromJSON:function(S){var T=S.charAt(S.length-1).toLowerCase()!="z";var R=new Date(S);R.unspecified=T;return R}};var z={init:function(R){},toJSON:function(R){return R},fromJSON:function(R){return R}};function c(R){var T="";for(var S=0;S<R.length;S++){T=T+String.fromCharCode(R[S])}return btoa(T)}function b(R){var T=atob(R);var U=new Uint8Array(T.length);for(var S=0;S<U.length;S++){U[S]=T.charCodeAt(S)}return U}var f={init:function(R){},toJSON:function(R){return c(R)},fromJSON:function(R){return b(R)}};var H={init:function(R){},toJSON:function(R){return R},fromJSON:function(R){return R}};var a=(function(){function R(S){this.element=S}R.prototype.init=function(S){this.inner=S.getSerializer(this.element)};R.prototype.toJSON=function(T){var S=this;return T.map(function(U){return S.inner.toJSON(U)})};R.prototype.fromJSON=function(T){var S=this;return T.map(function(U){return S.inner.fromJSON(U)})};return R}());var o=(function(){function R(S){this.element=S}R.prototype.init=function(S){this.inner=S.getSerializer(this.element)};R.prototype.toJSON=function(T){var S=this;var U={};T.forEach(function(V,W){U[V]=S.inner.toJSON(W)});return U};R.prototype.fromJSON=function(S){var U=new n();for(var T in S){U.setAt(T,this.inner.fromJSON(S[T]))}return U};return R}());var y=(function(){function R(S){this.element=S}R.prototype.init=function(S){this.inner=S.getSerializer(this.element)};R.prototype.toJSON=function(S){return S===null?null:[this.inner.toJSON(S)]};R.prototype.fromJSON=function(S){return S===null?null:this.inner.fromJSON(S[0])};return R}());var I=(function(){function R(S){this.elements=S}R.prototype.length=function(){return this.elements.length};R.prototype.init=function(S){this.inner=this.elements.map(function(T){return S.getSerializer(T)})};R.prototype.toJSON=function(V){var T=this.length();var U=new Array(T);for(var S=0;S<T;S++){U[S]=this.inner[S].toJSON(V[S])}return U};R.prototype.fromJSON=function(T){var U=this.length();var V=new Array(U);for(var S=0;S<U;S++){V[S]=this.inner[S].fromJSON(T[S])}return V};return R}());function e(R){switch(R.tag){case"ArrayType":return new a(R.Item);case"ListType":return new a(R.Item);case"SequenceType":return new a(R.Item);case"BooleanType":return d;case"BytesType":return f;case"DateTimeType":return k;case"DoubleType":return w;case"IntType":return w;case"JsonType":return z;case"OptionType":return new y(R.Item);case"StringDictType":return new o(R.Item);case"StringType":return H;case"TupleType":return new I(R.Item);default:throw new Error("Invalid DataType")}}var M=(function(){function R(){this.activators=new n()}R.prototype.registerActivators=function(T){var S=this;T.forEach(function(U){S.activators.setAt(U.typeId,U)})};R.prototype.fullCaseName=function(U,S){var T=U.lastIndexOf(".");if(T===-1){return S}else{return U.substr(0,T)+"."+S}};R.prototype.createRecord=function(T,S){return this.activators.at(T).createInstance(S)};R.prototype.createUnion=function(U,T,S){return this.activators.at(this.fullCaseName(U,T)).createInstance(S)};return R}());var p=(function(){function R(){}R.prototype.init=function(S){};R.prototype.toJSON=function(S){return S};R.prototype.fromJSON=function(S){return S};return R}());var B=(function(){function R(S,T){this.record=S;this.typeRegistry=T}R.prototype.init=function(S){this.fields=this.record.RecordFields.map(function(T){return{name:T.FieldName,ser:S.getSerializer(T.FieldType)}})};R.prototype.toJSON=function(T){var S={};this.fields.forEach(function(U){S[U.name]=U.ser.toJSON(T[U.name])});return S};R.prototype.fromJSON=function(V){var W=this.fields.length;var S=new Array(W);for(var U=0;U<W;U++){var T=this.fields[U];S[U]=T.ser.fromJSON(V[T.name])}return this.typeRegistry.createRecord(this.record.RecordName,S)};return R}());var q=(function(){function R(){}return R}());var g=(function(){function R(){}return R}());var N=(function(){function R(T,S){this.union=T;this.typeRegistry=S}R.prototype.init=function(S){this.cases=this.union.UnionCases.map(function(T){return{caseName:T.CaseName,fields:T.CaseFields.map(function(U){return{fieldName:U.FieldName,fieldSerializer:S.getSerializer(U.FieldType)}})}})};R.prototype.findCase=function(U){for(var T=0;T<this.cases.length;T++){var S=this.cases[T];if(S.caseName===U){return S}}};R.prototype.toJSON=function(Z){var U=typeof Z==="string";var W=U?Z:Z.tag;var X=this.findCase(W);if(X!==undefined){if(U){return[W]}else{var V=new Array(X.fields.length+1);V[0]=W;for(var T=0;T<X.fields.length;T++){var S=X.fields[T];var Y=Z[S.fieldName];V[T+1]=S.fieldSerializer.toJSON(Y)}return V}}return null};R.prototype.fromJSON=function(W){var T=this.findCase(W[0]);if(T!==undefined){var S=new Array(W.length-1);for(var V=0;V<S.length;V++){var U=T.fields[V];S[V]=U.fieldSerializer.fromJSON(W[V+1])}return this.typeRegistry.createUnion(this.union.UnionName,T.caseName,S)}else{return null}};return R}());function L(R){return{tag:"TypeReference",Item:R}}function J(R){return{tag:"TupleType",Item:R}}var G=(function(){function R(){this.dict=new n();this.registry=new M()}R.prototype.add=function(S,U){var T=j(S);this.dict.setAt(T,U)};R.prototype.getSerializer=function(S){var T=j(S);return this.dict.at(T)};R.prototype.contains=function(S){var T=j(S);return this.dict.containsKey(T)};R.prototype.init=function(){var S=this;this.dict.forEach(function(T,U){U.init(S)})};R.prototype.registerActivators=function(S){this.registry.registerActivators(S)};R.prototype.createVisitor=function(){var S=this;var U=l();var T=function(V){if(!S.contains(V)){S.add(V,e(V))}};U.visitDataType=function(V){if(V.tag!=="TypeReference"){T(V)}};U.visitRecord=function(W){var V=L(W.RecordName);S.add(V,new B(W,S.registry))};U.visitUnion=function(W){var V=L(W.UnionName);S.add(V,new N(W,S.registry))};U.visitEnum=function(W){var V=L(W.EnumName);S.add(V,new p())};return U};R.prototype.registerTypes=function(S){Q(S,this.createVisitor());this.init()};R.prototype.registerServiceMethods=function(S){P(S,this.createVisitor());this.init()};return R}());var h=(function(){function R(S,T){if(S===void 0){S=new u()}this.httpClient=S;if(!T){this.prefix="/gluon-api"}else{this.prefix=T}}return R}());s.Client=h;var u=(function(){function R(){}R.prototype.httpGet=function(U,T,S){return jQuery.ajax({url:U,type:"get",data:T}).then(function(V){return S(V)})};R.prototype.httpCall=function(T,X,U,V){var S={url:X,type:T};if(x.isSome(U)){S.data=U;S.dataType="json";S.contentType="application/json"}var W=jQuery.ajax(S);if(x.isSome(V)){return W.then(function(Y){return V(Y)})}else{return W}};return R}());var D;(function(W){function Y(Z){switch(Z){case"Get":return"get";case"Delete":return"delete";case"Post":return"post";case"Put":return"put";default:throw new Error("match failed")}}function X(Z){switch(Z.tag){case"HttpCallingConvention":return Z.Item1;default:throw new Error("match failed")}}function U(Z){switch(Z.tag){case"HttpCallingConvention":return Z.path;default:throw new Error("match failed")}}function T(Z,aa){return Z.prefix+"/"+U(aa.CallingConvention)}function S(aa,ab,Z){var ac={};ab.innerMethod.MethodParameters.forEach(function(ae,ad){ac[ae.ParameterName]=JSON.stringify(ab.parameterSerializers[ad].toJSON(Z[ad]))});return ac}function R(aa,ac,Z){var ab;if(ac.arity==0){return null}else{if(ac.arity==1){ab=Z[0]}else{ab=Z}}return JSON.stringify(ac.jointParametersSerializer.toJSON(ab))}function V(aa,ae,Z){function ad(ai){if(ae.doesReturn){var ah=ae.returnTypeSerializer.fromJSON(ai);return ah}else{return ai}}var ag=T(aa,ae.innerMethod);var ab=X(ae.innerMethod.CallingConvention);switch(ab){case"Get":var af=S(aa,ae,Z);return aa.httpClient.httpGet(ag,af,ad);default:var ac=R(aa,ae,Z);return aa.httpClient.httpCall(Y(ab),ag,ac,ad)}}W.remoteCall=V})(D||(D={}));var C=(function(){function R(S,T){this.innerMethod=T;this.arity=T.MethodParameters.length;switch(this.arity){case 0:break;case 1:var U=S.getSerializer(T.MethodParameters[0].ParameterType);this.jointParametersSerializer=U;this.parameterSerializers=[U];break;default:this.parameterSerializers=T.MethodParameters.map(function(V){return S.getSerializer(V.ParameterType)});this.jointParametersSerializer=S.getSerializer(J(T.MethodParameters.map(function(V){return V.ParameterType})));break}if(!!T.MethodReturnType){this.doesReturn=true;this.returnTypeSerializer=S.getSerializer(T.MethodReturnType)}else{this.doesReturn=false}}R.prototype.call=function(T,S){return D.remoteCall(T,this,S)};return R}());var v=(function(){function R(S){this.factory=S;this.table=new n()}R.prototype.registerService=function(T){var S=this;T.Methods.forEach(function(U){var V=new C(S.factory,U);S.table.setAt(U.MethodName,V)})};R.prototype.getProxy=function(S){return this.table.at(S)};R.prototype.remoteMethod=function(T){var S=this;return function(V){var W=S.getProxy(T);function U(){var X=arguments;return W.call(V,X)}return U}};return R}());var A;(function(ae){function R(aj,ak){return aj[ak+1]}function ad(ak){var aj=ak;return aj.slice(1)}function ag(aj){return aj[0]}function T(aj){switch(ag(aj)){case"ArrayType":return{tag:"ArrayType",Item:T(R(aj,0))};case"BooleanType":return{tag:"BooleanType"};case"BytesType":return{tag:"BytesType"};case"DateTimeType":return{tag:"DateTimeType"};case"DoubleType":return{tag:"DoubleType"};case"IntType":return{tag:"IntType"};case"JsonType":return{tag:"JsonType"};case"ListType":return{tag:"ListType",Item:T(R(aj,0))};case"OptionType":return{tag:"OptionType",Item:T(R(aj,0))};case"SequenceType":return{tag:"SequenceType",Item:T(R(aj,0))};case"StringDictType":return{tag:"StringDictType",Item:T(R(aj,0))};case"StringType":return{tag:"StringType"};case"TupleType":return{tag:"TupleType",Item:R(aj,0).map(T)};case"TypeReference":return{tag:"TypeReference",Item:R(aj,0)};default:throw new Error("failed to parse a data type")}}function V(aj){return{FieldName:aj.FieldName,FieldType:T(aj.FieldType)}}function af(aj){return{RecordName:aj.RecordName,RecordFields:aj.RecordFields.map(V)}}function ai(aj){return{CaseName:aj.CaseName,CaseFields:aj.CaseFields.map(V)}}function ah(aj){return{UnionName:aj.UnionName,UnionCases:aj.UnionCases.map(ai)}}function U(aj){return{EnumCaseName:aj.EnumCaseName,EnumCaseValue:aj.EnumCaseValue}}function aa(aj){return{EnumName:aj.EnumName,EnumCases:aj.EnumCases.map(U)}}function ac(aj){switch(ag(aj)){case"DefineRecord":return{tag:"DefineRecord",Item:af(R(aj,0))};case"DefineUnion":return{tag:"DefineUnion",Item:ah(R(aj,0))};case"DefineEnum":return{tag:"DefineEnum",Item:aa(R(aj,0))};default:throw new Error("error parsing type definition")}}ae.parseTypeDefinition=ac;function Z(aj){return{ParameterName:aj.ParameterName,ParameterType:T(aj.ParameterType)}}function W(ak){var aj=ag(ak);switch(aj){case"Delete":return aj;case"Get":return aj;case"Post":return aj;case"Put":return aj;default:throw new Error("error parsing http method")}}function S(aj){switch(ag(aj)){case"HttpCallingConvention":return{tag:"HttpCallingConvention",Item1:W(R(aj,0)),path:R(aj,1)};default:throw new Error("error parsing calling convention")}}function Y(aj,ak){return aj===null?null:ak(aj[0])}function X(ak){var aj=S(ak.CallingConvention);var al=ak.MethodName;var am=ak.MethodParameters.map(Z);var an=Y(ak.MethodReturnType,T);return{CallingConvention:aj,MethodName:al,MethodParameters:am,MethodReturnType:an}}function ab(aj){return{Methods:aj.Methods.map(X),TypeDefinitions:aj.TypeDefinitions.map(ac)}}ae.parseServiceSchema=ab})(A||(A={}));var t;(function(S){var Y=new G();var T=new v(Y);function Z(aa,ab){return Y.getSerializer({tag:"TypeReference",Item:aa}).toJSON(ab)}S.toJSON=Z;function R(ab,aa){return Y.getSerializer({tag:"TypeReference",Item:ab}).fromJSON(aa)}S.fromJSON=R;function U(ad){var aa=[];function ab(af,ae){aa.push({typeId:ac,createInstance:function(ag){return ae.apply(null,ag)}})}for(var ac in ad){ab(ac,ad[ac])}Y.registerActivators(aa)}S.registerActivators=U;function W(aa){var ab=aa.map(A.parseTypeDefinition);Y.registerTypes(ab)}S.registerTypeDefinitions=W;function V(aa){var ab=A.parseServiceSchema(aa);Y.registerTypes(ab.TypeDefinitions);Y.registerServiceMethods(ab.Methods);T.registerService(ab)}S.registerService=V;function X(aa){return T.remoteMethod(aa)}S.remoteMethod=X})(t=s.Internals||(s.Internals={}))})(Gluon||(Gluon={}));Gluon.Internals.registerActivators({"Gluon.Schema.Delete":function(){return"Delete"},"Gluon.Schema.Get":function(){return"Get"},"Gluon.Schema.Post":function(){return"Post"},"Gluon.Schema.Put":function(){return"Put"},"Gluon.Schema.HttpCallingConvention":function(a,b){return({tag:"HttpCallingConvention",Item1:a,path:b})},"Gluon.Schema.ArrayType":function(b){return({tag:"ArrayType",Item:b})},"Gluon.Schema.BooleanType":function(){return({tag:"BooleanType"})},"Gluon.Schema.BytesType":function(){return({tag:"BytesType"})},"Gluon.Schema.DateTimeType":function(){return({tag:"DateTimeType"})},"Gluon.Schema.DoubleType":function(){return({tag:"DoubleType"})},"Gluon.Schema.IntType":function(){return({tag:"IntType"})},"Gluon.Schema.JsonType":function(){return({tag:"JsonType"})},"Gluon.Schema.ListType":function(b){return({tag:"ListType",Item:b})},"Gluon.Schema.OptionType":function(b){return({tag:"OptionType",Item:b})},"Gluon.Schema.SequenceType":function(b){return({tag:"SequenceType",Item:b})},"Gluon.Schema.StringDictType":function(b){return({tag:"StringDictType",Item:b})},"Gluon.Schema.StringType":function(){return({tag:"StringType"})},"Gluon.Schema.TupleType":function(b){return({tag:"TupleType",Item:b})},"Gluon.Schema.TypeReference":function(b){return({tag:"TypeReference",Item:b})},"Gluon.Schema.Parameter":function(c,d){return({ParameterName:c,ParameterType:d})},"Gluon.Schema.Method":function(e,f,g,h){return({CallingConvention:e,MethodName:f,MethodParameters:g,MethodReturnType:h})},"Gluon.Schema.EnumCase":function(c,d){return({EnumCaseName:c,EnumCaseValue:d})},"Gluon.Schema.Enum":function(c,d){return({EnumName:c,EnumCases:d})},"Gluon.Schema.Field":function(c,d){return({FieldName:c,FieldType:d})},"Gluon.Schema.Record":function(c,d){return({RecordName:c,RecordFields:d})},"Gluon.Schema.UnionCase":function(c,d){return({CaseName:c,CaseFields:d})},"Gluon.Schema.Union":function(c,d){return({UnionName:c,UnionCases:d})},"Gluon.Schema.DefineEnum":function(b){return({tag:"DefineEnum",Item:b})},"Gluon.Schema.DefineRecord":function(b){return({tag:"DefineRecord",Item:b})},"Gluon.Schema.DefineUnion":function(b){return({tag:"DefineUnion",Item:b})},"Gluon.Schema.Service":function(c,d){return({Methods:c,TypeDefinitions:d})}});Gluon.Internals.registerTypeDefinitions([["DefineUnion",{UnionName:"Gluon.Schema.HttpMethod",UnionCases:[{CaseName:"Delete",CaseFields:[]},{CaseName:"Get",CaseFields:[]},{CaseName:"Post",CaseFields:[]},{CaseName:"Put",CaseFields:[]}]}],["DefineUnion",{UnionName:"Gluon.Schema.CallingConvention",UnionCases:[{CaseName:"HttpCallingConvention",CaseFields:[{FieldName:"Item1",FieldType:["TypeReference","Gluon.Schema.HttpMethod"]},{FieldName:"path",FieldType:["StringType"]}]}]}],["DefineUnion",{UnionName:"Gluon.Schema.DataType",UnionCases:[{CaseName:"ArrayType",CaseFields:[{FieldName:"Item",FieldType:["TypeReference","Gluon.Schema.DataType"]}]},{CaseName:"BooleanType",CaseFields:[]},{CaseName:"BytesType",CaseFields:[]},{CaseName:"DateTimeType",CaseFields:[]},{CaseName:"DoubleType",CaseFields:[]},{CaseName:"IntType",CaseFields:[]},{CaseName:"JsonType",CaseFields:[]},{CaseName:"ListType",CaseFields:[{FieldName:"Item",FieldType:["TypeReference","Gluon.Schema.DataType"]}]},{CaseName:"OptionType",CaseFields:[{FieldName:"Item",FieldType:["TypeReference","Gluon.Schema.DataType"]}]},{CaseName:"SequenceType",CaseFields:[{FieldName:"Item",FieldType:["TypeReference","Gluon.Schema.DataType"]}]},{CaseName:"StringDictType",CaseFields:[{FieldName:"Item",FieldType:["TypeReference","Gluon.Schema.DataType"]}]},{CaseName:"StringType",CaseFields:[]},{CaseName:"TupleType",CaseFields:[{FieldName:"Item",FieldType:["ListType",["TypeReference","Gluon.Schema.DataType"]]}]},{CaseName:"TypeReference",CaseFields:[{FieldName:"Item",FieldType:["StringType"]}]}]}],["DefineRecord",{RecordName:"Gluon.Schema.Parameter",RecordFields:[{FieldName:"ParameterName",FieldType:["StringType"]},{FieldName:"ParameterType",FieldType:["TypeReference","Gluon.Schema.DataType"]}]}],["DefineRecord",{RecordName:"Gluon.Schema.Method",RecordFields:[{FieldName:"CallingConvention",FieldType:["TypeReference","Gluon.Schema.CallingConvention"]},{FieldName:"MethodName",FieldType:["StringType"]},{FieldName:"MethodParameters",FieldType:["ListType",["TypeReference","Gluon.Schema.Parameter"]]},{FieldName:"MethodReturnType",FieldType:["OptionType",["TypeReference","Gluon.Schema.DataType"]]}]}],["DefineRecord",{RecordName:"Gluon.Schema.EnumCase",RecordFields:[{FieldName:"EnumCaseName",FieldType:["StringType"]},{FieldName:"EnumCaseValue",FieldType:["IntType"]}]}],["DefineRecord",{RecordName:"Gluon.Schema.Enum",RecordFields:[{FieldName:"EnumName",FieldType:["StringType"]},{FieldName:"EnumCases",FieldType:["ListType",["TypeReference","Gluon.Schema.EnumCase"]]}]}],["DefineRecord",{RecordName:"Gluon.Schema.Field",RecordFields:[{FieldName:"FieldName",FieldType:["StringType"]},{FieldName:"FieldType",FieldType:["TypeReference","Gluon.Schema.DataType"]}]}],["DefineRecord",{RecordName:"Gluon.Schema.Record",RecordFields:[{FieldName:"RecordName",FieldType:["StringType"]},{FieldName:"RecordFields",FieldType:["ListType",["TypeReference","Gluon.Schema.Field"]]}]}],["DefineRecord",{RecordName:"Gluon.Schema.UnionCase",RecordFields:[{FieldName:"CaseName",FieldType:["StringType"]},{FieldName:"CaseFields",FieldType:["ListType",["TypeReference","Gluon.Schema.Field"]]}]}],["DefineRecord",{RecordName:"Gluon.Schema.Union",RecordFields:[{FieldName:"UnionName",FieldType:["StringType"]},{FieldName:"UnionCases",FieldType:["ListType",["TypeReference","Gluon.Schema.UnionCase"]]}]}],["DefineUnion",{UnionName:"Gluon.Schema.TypeDefinition",UnionCases:[{CaseName:"DefineEnum",CaseFields:[{FieldName:"Item",FieldType:["TypeReference","Gluon.Schema.Enum"]}]},{CaseName:"DefineRecord",CaseFields:[{FieldName:"Item",FieldType:["TypeReference","Gluon.Schema.Record"]}]},{CaseName:"DefineUnion",CaseFields:[{FieldName:"Item",FieldType:["TypeReference","Gluon.Schema.Union"]}]}]}],["DefineRecord",{RecordName:"Gluon.Schema.Service",RecordFields:[{FieldName:"Methods",FieldType:["ListType",["TypeReference","Gluon.Schema.Method"]]},{FieldName:"TypeDefinitions",FieldType:["ListType",["TypeReference","Gluon.Schema.TypeDefinition"]]}]}]]);