(function(a,b){if(typeof module==="object"&&typeof module.exports==="object"){var c=b(require,exports);if(c!==undefined){module.exports=c}}else{if(typeof define==="function"&&define.amd){define(a,b)}}})(["require","exports"],function(E,q){var F;(function(Y){var W=(function(){function ab(){}return ab}());Y.Parameter=W;var V=(function(){function ab(){}return ab}());Y.Method=V;var T=(function(){function ab(){}return ab}());Y.EnumCase=T;var S=(function(){function ab(){}return ab}());Y.Enum=S;var U=(function(){function ab(){}return ab}());Y.Field=U;var X=(function(){function ab(){}return ab}());Y.Record=X;var aa=(function(){function ab(){}return ab}());Y.UnionCase=aa;var Z=(function(){function ab(){}return ab}());Y.Union=Z})(F=q.Schema||(q.Schema={}));var x;(function(W){function X(aa){return aa}W.some=X;function U(aa){return aa!==undefined&&aa!==null}W.isSome=U;function V(){return null}W.none=V;function T(aa){return aa===undefined||aa===null}W.isNone=T;function S(aa){return U(aa)?(aa[0]):null}W.fromJSON=S;function Y(aa){return U(aa)?[aa]:null}W.toJSON=Y;function Z(ab,aa){return U(ab)?ab:aa}W.withDefault=Z})(x=q.Option||(q.Option={}));var n=(function(){function S(){this.data={}}S.prototype.check=function(T){if(typeof T!=="string"){throw new Error("Invalid or null key")}};S.prototype.containsKey=function(T){this.check(T);return this.data.hasOwnProperty(T)};S.prototype.forEach=function(U){for(var T in this.data){if(this.data.hasOwnProperty(T)){U(T,this.data[T])}}};S.prototype.copy=function(){var T=new S();this.forEach(function(V,U){return T.setAt(V,U)});return T};S.prototype.at=function(T){this.check(T);if(this.data.hasOwnProperty(T)){return this.data[T]}else{throw new Error("Missing key: "+T)}};S.prototype.tryFind=function(T){this.check(T);return this.data.hasOwnProperty(T)?this.data[T]:null};S.prototype.setAt=function(T,U){this.check(T);this.data[T]=U};S.prototype.toJSON=function(){return this.data};return S}());q.Dict=n;var i;(function(T){function S(U){switch(U.tag){case"ArrayType":return[U.Item];case"ListType":return[U.Item];case"OptionType":return[U.Item];case"SequenceType":return[U.Item];case"StringDictType":return[U.Item];case"TupleType":return U.Item;default:return[]}}T.children=S})(i||(i={}));function l(){return{visitDataType:function(S){},visitRecord:function(S){},visitUnion:function(S){},visitEnum:function(S){}}}function P(S,T){T.visitDataType(S);i.children(S).forEach(function(U){return P(U,T)})}function R(S,W){function V(aa){P(aa.FieldType,W)}function X(aa){W.visitRecord(aa);aa.RecordFields.forEach(V)}function T(aa){aa.CaseFields.forEach(V)}function Z(aa){W.visitUnion(aa);aa.UnionCases.forEach(T)}function U(aa){W.visitEnum(aa)}function Y(aa){switch(aa.tag){case"DefineUnion":return Z(aa.Item);case"DefineRecord":return X(aa.Item);case"DefineEnum":return U(aa.Item);default:throw new Error("match failed")}}S.forEach(Y)}function Q(S,U){function V(W){P(W.ParameterType,U)}function T(W){W.MethodParameters.forEach(V);if(W.MethodParameters.length>1){var X=K(W.MethodParameters.map(function(Y){return Y.ParameterType}));P(X,U)}if(!!W.MethodReturnType){P(W.MethodReturnType,U)}}S.forEach(T)}function j(S){function T(U){switch(U.tag){case"ArrayType":return[":array",T(U.Item)];case"BooleanType":return":bool";case"BytesType":return":bytes";case"DateTimeType":return":datetime";case"DoubleType":return":double";case"IntType":return":int";case"JsonType":return":json";case"ListType":return[":list",T(U.Item)];case"OptionType":return[":option",T(U.Item)];case"SequenceType":return[":seq",T(U.Item)];case"StringDictType":return[":sdict",T(U.Item)];case"StringType":return":str";case"TupleType":return[":tup"].concat(U.Item.map(function(V){return T(V)}));case"TypeReference":return U.Item;default:throw new Error("match failed")}}return JSON.stringify(T(S))}function L(S){switch(S.tag){case"DefineEnum":return S.Item.EnumName;case"DefineRecord":return S.Item.RecordName;case"DefineUnion":return S.Item.UnionName;default:throw new Error("match failed")}}function s(T,S){return T.TypeDefinitions.filter(function(U){return L(U)===S})[0]}var d={init:function(S){},toJSON:function(S){return S},fromJSON:function(S){return S}};function G(S){if(isFinite(S)){return S}else{return String(S)}}function m(S){return Number(S)}var w={init:function(S){},toJSON:G,fromJSON:m};var k={init:function(S){},toJSON:function(S){var T=S.toISOString();if(S.unspecified){T=T.substring(0,T.length-1)}return T},fromJSON:function(T){var U=T.charAt(T.length-1).toLowerCase()!="z";var S=new Date(T);S.unspecified=U;return S}};var z={init:function(S){},toJSON:function(S){return S},fromJSON:function(S){return S}};function c(S){var U="";for(var T=0;T<S.length;T++){U=U+String.fromCharCode(S[T])}return btoa(U)}function b(S){var U=atob(S);var V=new Uint8Array(U.length);for(var T=0;T<V.length;T++){V[T]=U.charCodeAt(T)}return V}var f={init:function(S){},toJSON:function(S){return c(S)},fromJSON:function(S){return b(S)}};var I={init:function(S){},toJSON:function(S){return S},fromJSON:function(S){return S}};var a=(function(){function S(T){this.element=T}S.prototype.init=function(T){this.inner=T.getSerializer(this.element)};S.prototype.toJSON=function(U){var T=this;return U.map(function(V){return T.inner.toJSON(V)})};S.prototype.fromJSON=function(U){var T=this;return U.map(function(V){return T.inner.fromJSON(V)})};return S}());var o=(function(){function S(T){this.element=T}S.prototype.init=function(T){this.inner=T.getSerializer(this.element)};S.prototype.toJSON=function(U){var T=this;var V={};U.forEach(function(W,X){V[W]=T.inner.toJSON(X)});return V};S.prototype.fromJSON=function(T){var V=new n();for(var U in T){V.setAt(U,this.inner.fromJSON(T[U]))}return V};return S}());var y=(function(){function S(T){this.element=T}S.prototype.init=function(T){this.inner=T.getSerializer(this.element)};S.prototype.toJSON=function(T){return T===null?null:[this.inner.toJSON(T)]};S.prototype.fromJSON=function(T){return T===null?null:this.inner.fromJSON(T[0])};return S}());var J=(function(){function S(T){this.elements=T}S.prototype.length=function(){return this.elements.length};S.prototype.init=function(T){this.inner=this.elements.map(function(U){return T.getSerializer(U)})};S.prototype.toJSON=function(W){var U=this.length();var V=new Array(U);for(var T=0;T<U;T++){V[T]=this.inner[T].toJSON(W[T])}return V};S.prototype.fromJSON=function(U){var V=this.length();var W=new Array(V);for(var T=0;T<V;T++){W[T]=this.inner[T].fromJSON(U[T])}return W};return S}());function e(S){switch(S.tag){case"ArrayType":return new a(S.Item);case"ListType":return new a(S.Item);case"SequenceType":return new a(S.Item);case"BooleanType":return d;case"BytesType":return f;case"DateTimeType":return k;case"DoubleType":return w;case"IntType":return w;case"JsonType":return z;case"OptionType":return new y(S.Item);case"StringDictType":return new o(S.Item);case"StringType":return I;case"TupleType":return new J(S.Item);default:throw new Error("Invalid DataType")}}var N=(function(){function S(){this.activators=new n()}S.prototype.registerActivators=function(U){var T=this;U.forEach(function(V){T.activators.setAt(V.typeId,V)})};S.prototype.fullCaseName=function(V,T){var U=V.lastIndexOf(".");if(U===-1){return T}else{return V.substr(0,U)+"."+T}};S.prototype.createRecord=function(U,T){return this.activators.at(U).createInstance(T)};S.prototype.createUnion=function(V,U,T){return this.activators.at(this.fullCaseName(V,U)).createInstance(T)};return S}());var p=(function(){function S(){}S.prototype.init=function(T){};S.prototype.toJSON=function(T){return T};S.prototype.fromJSON=function(T){return T};return S}());var B=(function(){function S(T,U){this.record=T;this.typeRegistry=U}S.prototype.init=function(T){this.fields=this.record.RecordFields.map(function(U){return{name:U.FieldName,ser:T.getSerializer(U.FieldType)}})};S.prototype.toJSON=function(U){var T={};this.fields.forEach(function(V){T[V.name]=V.ser.toJSON(U[V.name])});return T};S.prototype.fromJSON=function(W){var X=this.fields.length;var T=new Array(X);for(var V=0;V<X;V++){var U=this.fields[V];T[V]=U.ser.fromJSON(W[U.name])}return this.typeRegistry.createRecord(this.record.RecordName,T)};return S}());var r=(function(){function S(){}return S}());var g=(function(){function S(){}return S}());var O=(function(){function S(U,T){this.union=U;this.typeRegistry=T}S.prototype.init=function(T){this.cases=this.union.UnionCases.map(function(U){return{caseName:U.CaseName,fields:U.CaseFields.map(function(V){return{fieldName:V.FieldName,fieldSerializer:T.getSerializer(V.FieldType)}})}})};S.prototype.findCase=function(V){for(var U=0;U<this.cases.length;U++){var T=this.cases[U];if(T.caseName===V){return T}}};S.prototype.toJSON=function(aa){var V=typeof aa==="string";var X=V?aa:aa.tag;var Y=this.findCase(X);if(Y!==undefined){if(V){return[X]}else{var W=new Array(Y.fields.length+1);W[0]=X;for(var U=0;U<Y.fields.length;U++){var T=Y.fields[U];var Z=aa[T.fieldName];W[U+1]=T.fieldSerializer.toJSON(Z)}return W}}return null};S.prototype.fromJSON=function(X){var U=this.findCase(X[0]);if(U!==undefined){var T=new Array(X.length-1);for(var W=0;W<T.length;W++){var V=U.fields[W];T[W]=V.fieldSerializer.fromJSON(X[W+1])}return this.typeRegistry.createUnion(this.union.UnionName,U.caseName,T)}else{return null}};return S}());function M(S){return{tag:"TypeReference",Item:S}}function K(S){return{tag:"TupleType",Item:S}}var H=(function(){function S(){this.dict=new n();this.registry=new N()}S.prototype.add=function(T,V){var U=j(T);this.dict.setAt(U,V)};S.prototype.getSerializer=function(T){var U=j(T);return this.dict.at(U)};S.prototype.contains=function(T){var U=j(T);return this.dict.containsKey(U)};S.prototype.init=function(){var T=this;this.dict.forEach(function(U,V){V.init(T)})};S.prototype.registerActivators=function(T){this.registry.registerActivators(T)};S.prototype.createVisitor=function(){var T=this;var V=l();var U=function(W){if(!T.contains(W)){T.add(W,e(W))}};V.visitDataType=function(W){if(W.tag!=="TypeReference"){U(W)}};V.visitRecord=function(X){var W=M(X.RecordName);T.add(W,new B(X,T.registry))};V.visitUnion=function(X){var W=M(X.UnionName);T.add(W,new O(X,T.registry))};V.visitEnum=function(X){var W=M(X.EnumName);T.add(W,new p())};return V};S.prototype.registerTypes=function(T){R(T,this.createVisitor());this.init()};S.prototype.registerServiceMethods=function(T){Q(T,this.createVisitor());this.init()};return S}());var h=(function(){function S(T,U){if(T===void 0){T=new u()}this.httpClient=T;if(!U){this.prefix="/gluon-api"}else{this.prefix=U}}return S}());q.Client=h;var u=(function(){function S(){}S.prototype.httpGet=function(V,U,T){return jQuery.ajax({url:V,type:"get",data:U}).then(function(W){return T(W)})};S.prototype.httpCall=function(U,Y,V,W){var T={url:Y,type:U};if(x.isSome(V)){T.data=V;T.dataType="json";T.contentType="application/json"}var X=jQuery.ajax(T);if(x.isSome(W)){return X.then(function(Z){return W(Z)})}else{return X}};return S}());var D;(function(X){function Z(aa){switch(aa){case"Get":return"get";case"Delete":return"delete";case"Post":return"post";case"Put":return"put";default:throw new Error("match failed")}}function Y(aa){switch(aa.tag){case"HttpCallingConvention":return aa.Item1;default:throw new Error("match failed")}}function V(aa){switch(aa.tag){case"HttpCallingConvention":return aa.path;default:throw new Error("match failed")}}function U(aa,ab){return aa.prefix+"/"+V(ab.CallingConvention)}function T(ab,ac,aa){var ad={};ac.innerMethod.MethodParameters.forEach(function(af,ae){ad[af.ParameterName]=JSON.stringify(ac.parameterSerializers[ae].toJSON(aa[ae]))});return ad}function S(ab,ad,aa){var ac;if(ad.arity==0){return null}else{if(ad.arity==1){ac=aa[0]}else{ac=aa}}return JSON.stringify(ad.jointParametersSerializer.toJSON(ac))}function W(ab,af,aa){function ae(aj){if(af.doesReturn){var ai=af.returnTypeSerializer.fromJSON(aj);return ai}else{return aj}}var ah=U(ab,af.innerMethod);var ac=Y(af.innerMethod.CallingConvention);switch(ac){case"Get":var ag=T(ab,af,aa);return ab.httpClient.httpGet(ah,ag,ae);default:var ad=S(ab,af,aa);return ab.httpClient.httpCall(Z(ac),ah,ad,ae)}}X.remoteCall=W})(D||(D={}));var C=(function(){function S(T,U){this.innerMethod=U;this.arity=U.MethodParameters.length;switch(this.arity){case 0:break;case 1:var V=T.getSerializer(U.MethodParameters[0].ParameterType);this.jointParametersSerializer=V;this.parameterSerializers=[V];break;default:this.parameterSerializers=U.MethodParameters.map(function(W){return T.getSerializer(W.ParameterType)});this.jointParametersSerializer=T.getSerializer(K(U.MethodParameters.map(function(W){return W.ParameterType})));break}if(!!U.MethodReturnType){this.doesReturn=true;this.returnTypeSerializer=T.getSerializer(U.MethodReturnType)}else{this.doesReturn=false}}S.prototype.call=function(U,T){return D.remoteCall(U,this,T)};return S}());var v=(function(){function S(T){this.factory=T;this.table=new n()}S.prototype.registerService=function(U){var T=this;U.Methods.forEach(function(V){var W=new C(T.factory,V);T.table.setAt(V.MethodName,W)})};S.prototype.getProxy=function(T){return this.table.at(T)};S.prototype.remoteMethod=function(U){var T=this;return function(W){var X=T.getProxy(U);function V(){var Y=arguments;return X.call(W,Y)}return V}};return S}());var A;(function(af){function S(ak,al){return ak[al+1]}function ae(al){var ak=al;return ak.slice(1)}function ah(ak){return ak[0]}function U(ak){switch(ah(ak)){case"ArrayType":return{tag:"ArrayType",Item:U(S(ak,0))};case"BooleanType":return{tag:"BooleanType"};case"BytesType":return{tag:"BytesType"};case"DateTimeType":return{tag:"DateTimeType"};case"DoubleType":return{tag:"DoubleType"};case"IntType":return{tag:"IntType"};case"JsonType":return{tag:"JsonType"};case"ListType":return{tag:"ListType",Item:U(S(ak,0))};case"OptionType":return{tag:"OptionType",Item:U(S(ak,0))};case"SequenceType":return{tag:"SequenceType",Item:U(S(ak,0))};case"StringDictType":return{tag:"StringDictType",Item:U(S(ak,0))};case"StringType":return{tag:"StringType"};case"TupleType":return{tag:"TupleType",Item:S(ak,0).map(U)};case"TypeReference":return{tag:"TypeReference",Item:S(ak,0)};default:throw new Error("failed to parse a data type")}}function W(ak){return{FieldName:ak.FieldName,FieldType:U(ak.FieldType)}}function ag(ak){return{RecordName:ak.RecordName,RecordFields:ak.RecordFields.map(W)}}function aj(ak){return{CaseName:ak.CaseName,CaseFields:ak.CaseFields.map(W)}}function ai(ak){return{UnionName:ak.UnionName,UnionCases:ak.UnionCases.map(aj)}}function V(ak){return{EnumCaseName:ak.EnumCaseName,EnumCaseValue:ak.EnumCaseValue}}function ab(ak){return{EnumName:ak.EnumName,EnumCases:ak.EnumCases.map(V)}}function ad(ak){switch(ah(ak)){case"DefineRecord":return{tag:"DefineRecord",Item:ag(S(ak,0))};case"DefineUnion":return{tag:"DefineUnion",Item:ai(S(ak,0))};case"DefineEnum":return{tag:"DefineEnum",Item:ab(S(ak,0))};default:throw new Error("error parsing type definition")}}af.parseTypeDefinition=ad;function aa(ak){return{ParameterName:ak.ParameterName,ParameterType:U(ak.ParameterType)}}function X(al){var ak=ah(al);switch(ak){case"Delete":return ak;case"Get":return ak;case"Post":return ak;case"Put":return ak;default:throw new Error("error parsing http method")}}function T(ak){switch(ah(ak)){case"HttpCallingConvention":return{tag:"HttpCallingConvention",Item1:X(S(ak,0)),path:S(ak,1)};default:throw new Error("error parsing calling convention")}}function Z(ak,al){return ak===null?null:al(ak[0])}function Y(al){var ak=T(al.CallingConvention);var am=al.MethodName;var an=al.MethodParameters.map(aa);var ao=Z(al.MethodReturnType,U);return{CallingConvention:ak,MethodName:am,MethodParameters:an,MethodReturnType:ao}}function ac(ak){return{Methods:ak.Methods.map(Y),TypeDefinitions:ak.TypeDefinitions.map(ad)}}af.parseServiceSchema=ac})(A||(A={}));var t;(function(T){var Z=new H();var U=new v(Z);function aa(ab,ac){return Z.getSerializer({tag:"TypeReference",Item:ab}).toJSON(ac)}T.toJSON=aa;function S(ac,ab){return Z.getSerializer({tag:"TypeReference",Item:ac}).fromJSON(ab)}T.fromJSON=S;function V(ae){var ab=[];function ac(ag,af){ab.push({typeId:ad,createInstance:function(ah){return af.apply(null,ah)}})}for(var ad in ae){ac(ad,ae[ad])}Z.registerActivators(ab)}T.registerActivators=V;function X(ab){var ac=ab.map(A.parseTypeDefinition);Z.registerTypes(ac)}T.registerTypeDefinitions=X;function W(ab){var ac=A.parseServiceSchema(ab);Z.registerTypes(ac.TypeDefinitions);Z.registerServiceMethods(ac.Methods);U.registerService(ac)}T.registerService=W;function Y(ab){return U.remoteMethod(ab)}T.remoteMethod=Y})(t=q.Internals||(q.Internals={}));t.registerActivators({"Gluon.Schema.Delete":function(){return"Delete"},"Gluon.Schema.Get":function(){return"Get"},"Gluon.Schema.Post":function(){return"Post"},"Gluon.Schema.Put":function(){return"Put"},"Gluon.Schema.HttpCallingConvention":function(S,T){return({tag:"HttpCallingConvention",Item1:S,path:T})},"Gluon.Schema.ArrayType":function(S){return({tag:"ArrayType",Item:S})},"Gluon.Schema.BooleanType":function(){return({tag:"BooleanType"})},"Gluon.Schema.BytesType":function(){return({tag:"BytesType"})},"Gluon.Schema.DateTimeType":function(){return({tag:"DateTimeType"})},"Gluon.Schema.DoubleType":function(){return({tag:"DoubleType"})},"Gluon.Schema.IntType":function(){return({tag:"IntType"})},"Gluon.Schema.JsonType":function(){return({tag:"JsonType"})},"Gluon.Schema.ListType":function(S){return({tag:"ListType",Item:S})},"Gluon.Schema.OptionType":function(S){return({tag:"OptionType",Item:S})},"Gluon.Schema.SequenceType":function(S){return({tag:"SequenceType",Item:S})},"Gluon.Schema.StringDictType":function(S){return({tag:"StringDictType",Item:S})},"Gluon.Schema.StringType":function(){return({tag:"StringType"})},"Gluon.Schema.TupleType":function(S){return({tag:"TupleType",Item:S})},"Gluon.Schema.TypeReference":function(S){return({tag:"TypeReference",Item:S})},"Gluon.Schema.Parameter":function(S,T){return({ParameterName:S,ParameterType:T})},"Gluon.Schema.Method":function(S,T,U,V){return({CallingConvention:S,MethodName:T,MethodParameters:U,MethodReturnType:V})},"Gluon.Schema.EnumCase":function(S,T){return({EnumCaseName:S,EnumCaseValue:T})},"Gluon.Schema.Enum":function(S,T){return({EnumName:S,EnumCases:T})},"Gluon.Schema.Field":function(S,T){return({FieldName:S,FieldType:T})},"Gluon.Schema.Record":function(S,T){return({RecordName:S,RecordFields:T})},"Gluon.Schema.UnionCase":function(S,T){return({CaseName:S,CaseFields:T})},"Gluon.Schema.Union":function(S,T){return({UnionName:S,UnionCases:T})},"Gluon.Schema.DefineEnum":function(S){return({tag:"DefineEnum",Item:S})},"Gluon.Schema.DefineRecord":function(S){return({tag:"DefineRecord",Item:S})},"Gluon.Schema.DefineUnion":function(S){return({tag:"DefineUnion",Item:S})},"Gluon.Schema.Service":function(S,T){return({Methods:S,TypeDefinitions:T})}});t.registerTypeDefinitions([["DefineUnion",{UnionName:"Gluon.Schema.HttpMethod",UnionCases:[{CaseName:"Delete",CaseFields:[]},{CaseName:"Get",CaseFields:[]},{CaseName:"Post",CaseFields:[]},{CaseName:"Put",CaseFields:[]}]}],["DefineUnion",{UnionName:"Gluon.Schema.CallingConvention",UnionCases:[{CaseName:"HttpCallingConvention",CaseFields:[{FieldName:"Item1",FieldType:["TypeReference","Gluon.Schema.HttpMethod"]},{FieldName:"path",FieldType:["StringType"]}]}]}],["DefineUnion",{UnionName:"Gluon.Schema.DataType",UnionCases:[{CaseName:"ArrayType",CaseFields:[{FieldName:"Item",FieldType:["TypeReference","Gluon.Schema.DataType"]}]},{CaseName:"BooleanType",CaseFields:[]},{CaseName:"BytesType",CaseFields:[]},{CaseName:"DateTimeType",CaseFields:[]},{CaseName:"DoubleType",CaseFields:[]},{CaseName:"IntType",CaseFields:[]},{CaseName:"JsonType",CaseFields:[]},{CaseName:"ListType",CaseFields:[{FieldName:"Item",FieldType:["TypeReference","Gluon.Schema.DataType"]}]},{CaseName:"OptionType",CaseFields:[{FieldName:"Item",FieldType:["TypeReference","Gluon.Schema.DataType"]}]},{CaseName:"SequenceType",CaseFields:[{FieldName:"Item",FieldType:["TypeReference","Gluon.Schema.DataType"]}]},{CaseName:"StringDictType",CaseFields:[{FieldName:"Item",FieldType:["TypeReference","Gluon.Schema.DataType"]}]},{CaseName:"StringType",CaseFields:[]},{CaseName:"TupleType",CaseFields:[{FieldName:"Item",FieldType:["ListType",["TypeReference","Gluon.Schema.DataType"]]}]},{CaseName:"TypeReference",CaseFields:[{FieldName:"Item",FieldType:["StringType"]}]}]}],["DefineRecord",{RecordName:"Gluon.Schema.Parameter",RecordFields:[{FieldName:"ParameterName",FieldType:["StringType"]},{FieldName:"ParameterType",FieldType:["TypeReference","Gluon.Schema.DataType"]}]}],["DefineRecord",{RecordName:"Gluon.Schema.Method",RecordFields:[{FieldName:"CallingConvention",FieldType:["TypeReference","Gluon.Schema.CallingConvention"]},{FieldName:"MethodName",FieldType:["StringType"]},{FieldName:"MethodParameters",FieldType:["ListType",["TypeReference","Gluon.Schema.Parameter"]]},{FieldName:"MethodReturnType",FieldType:["OptionType",["TypeReference","Gluon.Schema.DataType"]]}]}],["DefineRecord",{RecordName:"Gluon.Schema.EnumCase",RecordFields:[{FieldName:"EnumCaseName",FieldType:["StringType"]},{FieldName:"EnumCaseValue",FieldType:["IntType"]}]}],["DefineRecord",{RecordName:"Gluon.Schema.Enum",RecordFields:[{FieldName:"EnumName",FieldType:["StringType"]},{FieldName:"EnumCases",FieldType:["ListType",["TypeReference","Gluon.Schema.EnumCase"]]}]}],["DefineRecord",{RecordName:"Gluon.Schema.Field",RecordFields:[{FieldName:"FieldName",FieldType:["StringType"]},{FieldName:"FieldType",FieldType:["TypeReference","Gluon.Schema.DataType"]}]}],["DefineRecord",{RecordName:"Gluon.Schema.Record",RecordFields:[{FieldName:"RecordName",FieldType:["StringType"]},{FieldName:"RecordFields",FieldType:["ListType",["TypeReference","Gluon.Schema.Field"]]}]}],["DefineRecord",{RecordName:"Gluon.Schema.UnionCase",RecordFields:[{FieldName:"CaseName",FieldType:["StringType"]},{FieldName:"CaseFields",FieldType:["ListType",["TypeReference","Gluon.Schema.Field"]]}]}],["DefineRecord",{RecordName:"Gluon.Schema.Union",RecordFields:[{FieldName:"UnionName",FieldType:["StringType"]},{FieldName:"UnionCases",FieldType:["ListType",["TypeReference","Gluon.Schema.UnionCase"]]}]}],["DefineUnion",{UnionName:"Gluon.Schema.TypeDefinition",UnionCases:[{CaseName:"DefineEnum",CaseFields:[{FieldName:"Item",FieldType:["TypeReference","Gluon.Schema.Enum"]}]},{CaseName:"DefineRecord",CaseFields:[{FieldName:"Item",FieldType:["TypeReference","Gluon.Schema.Record"]}]},{CaseName:"DefineUnion",CaseFields:[{FieldName:"Item",FieldType:["TypeReference","Gluon.Schema.Union"]}]}]}],["DefineRecord",{RecordName:"Gluon.Schema.Service",RecordFields:[{FieldName:"Methods",FieldType:["ListType",["TypeReference","Gluon.Schema.Method"]]},{FieldName:"TypeDefinitions",FieldType:["ListType",["TypeReference","Gluon.Schema.TypeDefinition"]]}]}]])});